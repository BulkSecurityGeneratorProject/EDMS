{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/audits/audits.service.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/admin/audits/audits.service.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a;\nconst core_1 = require(\"@angular/core\");\nconst http_1 = require(\"@angular/common/http\");\nconst shared_1 = require(\"app/shared\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet AuditsService = class AuditsService {\n    constructor(http) {\n        this.http = http;\n    }\n    query(req) {\n        const params = shared_1.createRequestOption(req);\n        params.set(app_constants_1.FROM_DATE, req.fromDate);\n        params.set(app_constants_1.TO_DATE, req.toDate);\n        const requestURL = app_constants_1.SERVER_API_URL + app_constants_1.MANAGEMENT_AUDITS;\n        return this.http.get(requestURL, {\n            params,\n            observe: app_constants_1.RESPONSE\n        });\n    }\n    find() {\n        return this.http.get(app_constants_1.SERVER_API_URL + app_constants_1.MANAGEMENT_USERTRANS);\n    }\n};\nAuditsService = tslib_1.__decorate([\n    core_1.Injectable({ providedIn: 'root' }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\n], AuditsService);\nexports.AuditsService = AuditsService;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/admin/audits/audits.service.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/audits/audits.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,+CAA4E;AAG5E,uCAAiD;AACjD,qDAA0H;AAI1H,IAAa,aAAa,GAA1B,MAAa,aAAa;IACxB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,KAAK,CAAC,GAAQ;QACZ,MAAM,MAAM,GAAe,4BAAmB,CAAC,GAAG,CAAC,CAAC;QACpD,MAAM,CAAC,GAAG,CAAC,yBAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpC,MAAM,CAAC,GAAG,CAAC,uBAAO,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAEhC,MAAM,UAAU,GAAG,8BAAc,GAAG,iCAAiB,CAAC;QAEtD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,UAAU,EAAE;YACxC,MAAM;YACN,OAAO,EAAE,wBAAQ;SAClB,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAAc,GAAG,oCAAoB,CAAC,CAAC;IAC9D,CAAC;CACF,CAAA;AAnBY,aAAa;IADzB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAEP,iBAAU,oBAAV,iBAAU;GADzB,aAAa,CAmBzB;AAnBY,sCAAa","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { createRequestOption } from 'app/shared';\nimport { SERVER_API_URL, FROM_DATE, TO_DATE, RESPONSE, MANAGEMENT_AUDITS, MANAGEMENT_USERTRANS } from 'app/app.constants';\nimport { Audit } from './audit.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuditsService {\n  constructor(private http: HttpClient) {}\n\n  query(req: any): Observable<HttpResponse<Audit[]>> {\n    const params: HttpParams = createRequestOption(req);\n    params.set(FROM_DATE, req.fromDate);\n    params.set(TO_DATE, req.toDate);\n\n    const requestURL = SERVER_API_URL + MANAGEMENT_AUDITS;\n\n    return this.http.get<Audit[]>(requestURL, {\n      params,\n      observe: RESPONSE\n    });\n  }\n\n  find() {\n    return this.http.get(SERVER_API_URL + MANAGEMENT_USERTRANS);\n  }\n}\n"]}]}