{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/settings/settings.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/account/settings/settings.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b;\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst core_2 = require(\"app/core\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet SettingsComponent = class SettingsComponent {\n    constructor(accountService, fb) {\n        this.accountService = accountService;\n        this.fb = fb;\n        this.settingsForm = this.fb.group({\n            firstName: [undefined, [forms_1.Validators.required, forms_1.Validators.minLength(1), forms_1.Validators.maxLength(50)]],\n            lastName: [undefined, [forms_1.Validators.required, forms_1.Validators.minLength(1), forms_1.Validators.maxLength(50)]],\n            email: [undefined, [forms_1.Validators.required, forms_1.Validators.minLength(5), forms_1.Validators.maxLength(254), forms_1.Validators.email]],\n            activated: [false],\n            authorities: [[]],\n            langKey: [app_constants_1.EN],\n            login: [],\n            imageUrl: []\n        });\n    }\n    ngOnInit() {\n        this.accountService.identity().then(account => {\n            this.updateForm(account);\n        });\n    }\n    save() {\n        const settingsAccount = this.accountFromForm();\n        this.accountService.save(settingsAccount).subscribe(() => {\n            this.error = null;\n            this.success = app_constants_1.OK;\n            this.accountService.identity(true).then(account => {\n                this.updateForm(account);\n            });\n        }, () => {\n            this.success = null;\n            this.error = app_constants_1.ERROR_;\n        });\n    }\n    accountFromForm() {\n        const account = {};\n        return Object.assign({}, account, { firstName: this.settingsForm.get(app_constants_1.FIRST_NAME).value, lastName: this.settingsForm.get(app_constants_1.LAST_NAME).value, email: this.settingsForm.get(app_constants_1.EMAIL_LOWER_CASE).value, activated: this.settingsForm.get(app_constants_1.ACTIVATED).value, authorities: this.settingsForm.get(app_constants_1.AUTHORITIES).value, langKey: this.settingsForm.get(app_constants_1.LANG_KEY).value, login: this.settingsForm.get(app_constants_1.LOGIN_LOWER_CASE).value, imageUrl: this.settingsForm.get(app_constants_1.IMAGE_URL).value });\n    }\n    updateForm(account) {\n        this.settingsForm.patchValue({\n            firstName: account.firstName,\n            lastName: account.lastName,\n            email: account.email,\n            activated: account.activated,\n            authorities: account.authorities,\n            langKey: account.langKey,\n            login: account.login,\n            imageUrl: account.imageUrl\n        });\n    }\n};\nSettingsComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-settings',\n        templateUrl: './settings.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _b : Object])\n], SettingsComponent);\nexports.SettingsComponent = SettingsComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/account/settings/settings.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/settings/settings.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AccountService } from 'app/core';\nimport { Account } from 'app/core/user/account.model';\nimport { EN, OK, ERROR_, FIRST_NAME, LAST_NAME, EMAIL_LOWER_CASE, ACTIVATED, AUTHORITIES, LANG_KEY, LOGIN_LOWER_CASE, IMAGE_URL } from 'app/app.constants';\n\n@Component({\n  selector: 'jhi-settings',\n  templateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n  error: string;\n  success: string;\n  languages: any[];\n  settingsForm = this.fb.group({\n    firstName: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(50)]],\n    lastName: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(50)]],\n    email: [undefined, [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],\n    activated: [false],\n    authorities: [[]],\n    langKey: [EN],\n    login: [],\n    imageUrl: []\n  });\n\n  constructor(private accountService: AccountService, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.accountService.identity().then(account => {\n      this.updateForm(account);\n    });\n  }\n\n  save() {\n    const settingsAccount = this.accountFromForm();\n    this.accountService.save(settingsAccount).subscribe(\n      () => {\n        this.error = null;\n        this.success = OK;\n        this.accountService.identity(true).then(account => {\n          this.updateForm(account);\n        });\n      },\n      () => {\n        this.success = null;\n        this.error = ERROR_;\n      }\n    );\n  }\n\n  private accountFromForm(): any {\n    const account = {};\n    return {\n      ...account,\n      firstName: this.settingsForm.get(FIRST_NAME).value,\n      lastName: this.settingsForm.get(LAST_NAME).value,\n      email: this.settingsForm.get(EMAIL_LOWER_CASE).value,\n      activated: this.settingsForm.get(ACTIVATED).value,\n      authorities: this.settingsForm.get(AUTHORITIES).value,\n      langKey: this.settingsForm.get(LANG_KEY).value,\n      login: this.settingsForm.get(LOGIN_LOWER_CASE).value,\n      imageUrl: this.settingsForm.get(IMAGE_URL).value\n    };\n  }\n\n  updateForm(account: any): void {\n    this.settingsForm.patchValue({\n      firstName: account.firstName,\n      lastName: account.lastName,\n      email: account.email,\n      activated: account.activated,\n      authorities: account.authorities,\n      langKey: account.langKey,\n      login: account.login,\n      imageUrl: account.imageUrl\n    });\n  }\n}\n"]}]}