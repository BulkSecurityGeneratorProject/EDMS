{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/shared/login/login.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/shared/login/login.component.ts","mtime":1573033582437},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c, _d, _e, _f, _g, _h;\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\nconst router_1 = require(\"@angular/router\");\nconst ng_jhipster_1 = require(\"ng-jhipster\");\nconst login_service_1 = require(\"app/core/login/login.service\");\nconst state_storage_service_1 = require(\"app/core/auth/state-storage.service\");\nlet JhiLoginModalComponent = class JhiLoginModalComponent {\n    constructor(eventManager, loginService, stateStorageService, elementRef, renderer, router, activeModal, fb) {\n        this.eventManager = eventManager;\n        this.loginService = loginService;\n        this.stateStorageService = stateStorageService;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.router = router;\n        this.activeModal = activeModal;\n        this.fb = fb;\n        this.loginForm = this.fb.group({\n            username: [''],\n            password: [''],\n            rememberMe: [true]\n        });\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#username'), 'focus', []), 0);\n    }\n    cancel() {\n        this.authenticationError = false;\n        this.loginForm.patchValue({\n            username: '',\n            password: ''\n        });\n        this.activeModal.dismiss('cancel');\n    }\n    login() {\n        this.loginService\n            .login({\n            username: this.loginForm.get('username').value,\n            password: this.loginForm.get('password').value,\n            rememberMe: this.loginForm.get('rememberMe').value\n        })\n            .then(() => {\n            this.authenticationError = false;\n            this.activeModal.dismiss('login success');\n            if (this.router.url === '/register' || /^\\/activate\\//.test(this.router.url) || /^\\/reset\\//.test(this.router.url)) {\n                this.router.navigate(['']);\n            }\n            this.eventManager.broadcast({\n                name: 'authenticationSuccess',\n                content: 'Sending Authentication Success'\n            });\n            // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n            // since login is successful, go to stored previousState and clear previousState\n            const redirect = this.stateStorageService.getUrl();\n            if (redirect) {\n                this.stateStorageService.storeUrl(null);\n                this.router.navigateByUrl(redirect);\n            }\n        })\n            .catch(() => {\n            this.authenticationError = true;\n        });\n    }\n    register() {\n        this.activeModal.dismiss('to state register');\n        this.router.navigate(['/register']);\n    }\n    requestResetPassword() {\n        this.activeModal.dismiss('to state requestReset');\n        this.router.navigate(['/reset', 'request']);\n    }\n};\nJhiLoginModalComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-login-modal',\n        templateUrl: './login.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _a : Object, typeof (_b = typeof login_service_1.LoginService !== \"undefined\" && login_service_1.LoginService) === \"function\" ? _b : Object, typeof (_c = typeof state_storage_service_1.StateStorageService !== \"undefined\" && state_storage_service_1.StateStorageService) === \"function\" ? _c : Object, typeof (_d = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _d : Object, typeof (_e = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _e : Object, typeof (_f = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _f : Object, typeof (_g = typeof ng_bootstrap_1.NgbActiveModal !== \"undefined\" && ng_bootstrap_1.NgbActiveModal) === \"function\" ? _g : Object, typeof (_h = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _h : Object])\n], JhiLoginModalComponent);\nexports.JhiLoginModalComponent = JhiLoginModalComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/shared/login/login.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/shared/login/login.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, AfterViewInit, Renderer, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Router } from '@angular/router';\nimport { JhiEventManager } from 'ng-jhipster';\n\nimport { LoginService } from 'app/core/login/login.service';\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\n\n@Component({\n  selector: 'jhi-login-modal',\n  templateUrl: './login.component.html'\n})\nexport class JhiLoginModalComponent implements AfterViewInit {\n  authenticationError: boolean;\n\n  loginForm = this.fb.group({\n    username: [''],\n    password: [''],\n    rememberMe: [true]\n  });\n\n  constructor(\n    private eventManager: JhiEventManager,\n    private loginService: LoginService,\n    private stateStorageService: StateStorageService,\n    private elementRef: ElementRef,\n    private renderer: Renderer,\n    private router: Router,\n    public activeModal: NgbActiveModal,\n    private fb: FormBuilder\n  ) {}\n\n  ngAfterViewInit() {\n    setTimeout(() => this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#username'), 'focus', []), 0);\n  }\n\n  cancel() {\n    this.authenticationError = false;\n    this.loginForm.patchValue({\n      username: '',\n      password: ''\n    });\n    this.activeModal.dismiss('cancel');\n  }\n\n  login() {\n    this.loginService\n      .login({\n        username: this.loginForm.get('username').value,\n        password: this.loginForm.get('password').value,\n        rememberMe: this.loginForm.get('rememberMe').value\n      })\n      .then(() => {\n        this.authenticationError = false;\n        this.activeModal.dismiss('login success');\n        if (this.router.url === '/register' || /^\\/activate\\//.test(this.router.url) || /^\\/reset\\//.test(this.router.url)) {\n          this.router.navigate(['']);\n        }\n\n        this.eventManager.broadcast({\n          name: 'authenticationSuccess',\n          content: 'Sending Authentication Success'\n        });\n\n        // previousState was set in the authExpiredInterceptor before being redirected to login modal.\n        // since login is successful, go to stored previousState and clear previousState\n        const redirect = this.stateStorageService.getUrl();\n        if (redirect) {\n          this.stateStorageService.storeUrl(null);\n          this.router.navigateByUrl(redirect);\n        }\n      })\n      .catch(() => {\n        this.authenticationError = true;\n      });\n  }\n\n  register() {\n    this.activeModal.dismiss('to state register');\n    this.router.navigate(['/register']);\n  }\n\n  requestResetPassword() {\n    this.activeModal.dismiss('to state requestReset');\n    this.router.navigate(['/reset', 'request']);\n  }\n}\n"]}]}