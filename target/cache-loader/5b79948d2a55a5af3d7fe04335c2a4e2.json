{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/user-management/user-management.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/admin/user-management/user-management.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c, _d, _e, _f, _g, _h;\nconst core_1 = require(\"@angular/core\");\nconst ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\nconst router_1 = require(\"@angular/router\");\nconst ng_jhipster_1 = require(\"ng-jhipster\");\nconst shared_1 = require(\"app/shared\");\nconst core_2 = require(\"app/core\");\nconst user_management_delete_dialog_component_1 = require(\"./user-management-delete-dialog.component\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet UserMgmtComponent = class UserMgmtComponent {\n    constructor(userService, alertService, accountService, parseLinks, activatedRoute, router, eventManager, modalService) {\n        this.userService = userService;\n        this.alertService = alertService;\n        this.accountService = accountService;\n        this.parseLinks = parseLinks;\n        this.activatedRoute = activatedRoute;\n        this.router = router;\n        this.eventManager = eventManager;\n        this.modalService = modalService;\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\n        this.routeData = this.activatedRoute.data.subscribe(data => {\n            this.page = data[app_constants_1.PAGING_PARAMS].page;\n            this.previousPage = data[app_constants_1.PAGING_PARAMS].page;\n            this.reverse = data[app_constants_1.PAGING_PARAMS].ascending;\n            this.predicate = data[app_constants_1.PAGING_PARAMS].predicate;\n        });\n    }\n    ngOnInit() {\n        this.accountService.identity().then(account => {\n            this.currentAccount = account;\n            this.loadAll();\n            this.registerChangeInUsers();\n        });\n    }\n    ngOnDestroy() {\n        this.routeData.unsubscribe();\n    }\n    registerChangeInUsers() {\n        this.eventManager.subscribe(app_constants_1.USER_LIST_MODIFICATION, response => this.loadAll());\n    }\n    setActive(user, isActivated) {\n        user.activated = isActivated;\n        this.userService.update(user).subscribe(response => {\n            if (response.status === 200) {\n                this.error = null;\n                this.success = 'OK';\n                this.loadAll();\n            }\n            else {\n                this.success = null;\n                this.error = 'ERROR';\n            }\n        });\n    }\n    loadAll() {\n        this.userService\n            .query({\n            page: this.page - 1,\n            size: this.itemsPerPage,\n            sort: this.sort()\n        })\n            .subscribe((res) => this.onSuccess(res.body, res.headers), (res) => this.onError(res.body));\n    }\n    trackIdentity(index, item) {\n        return item.id;\n    }\n    sort() {\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    }\n    loadPage(page) {\n        if (page !== this.previousPage) {\n            this.previousPage = page;\n            this.transition();\n        }\n    }\n    transition() {\n        this.router.navigate([app_constants_1.ADMIN_USER_MANAGEMENT], {\n            queryParams: {\n                page: this.page,\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n            }\n        });\n        this.loadAll();\n    }\n    deleteUser(user) {\n        const modalRef = this.modalService.open(user_management_delete_dialog_component_1.UserMgmtDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n        modalRef.componentInstance.user = user;\n        modalRef.result.then(result => {\n            // Left blank intentionally, nothing to do here\n        }, reason => {\n            // Left blank intentionally, nothing to do here\n        });\n    }\n    onSuccess(data, headers) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = headers.get(app_constants_1.X_TOTAL_COUNT);\n        this.users = data;\n    }\n    onError(error) {\n        this.alertService.error(error.error, error.message, null);\n    }\n};\nUserMgmtComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-user-mgmt',\n        templateUrl: './user-management.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _b : Object, typeof (_c = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _c : Object, typeof (_d = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _f : Object, typeof (_g = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _g : Object, typeof (_h = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _h : Object])\n], UserMgmtComponent);\nexports.UserMgmtComponent = UserMgmtComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/admin/user-management/user-management.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/user-management/user-management.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JhiEventManager, JhiParseLinks, JhiAlertService } from 'ng-jhipster';\n\nimport { ITEMS_PER_PAGE } from 'app/shared';\nimport { AccountService, UserService, User } from 'app/core';\nimport { UserMgmtDeleteDialogComponent } from './user-management-delete-dialog.component';\nimport { PAGING_PARAMS, USER_LIST_MODIFICATION, ADMIN_USER_MANAGEMENT, X_TOTAL_COUNT } from 'app/app.constants';\n\n@Component({\n  selector: 'jhi-user-mgmt',\n  templateUrl: './user-management.component.html'\n})\nexport class UserMgmtComponent implements OnInit, OnDestroy {\n  currentAccount: any;\n  users: User[];\n  error: any;\n  success: any;\n  routeData: any;\n  links: any;\n  totalItems: any;\n  itemsPerPage: any;\n  page: any;\n  predicate: any;\n  previousPage: any;\n  reverse: any;\n\n  constructor(\n    private userService: UserService,\n    private alertService: JhiAlertService,\n    private accountService: AccountService,\n    private parseLinks: JhiParseLinks,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private eventManager: JhiEventManager,\n    private modalService: NgbModal\n  ) {\n    this.itemsPerPage = ITEMS_PER_PAGE;\n    this.routeData = this.activatedRoute.data.subscribe(data => {\n      this.page = data[PAGING_PARAMS].page;\n      this.previousPage = data[PAGING_PARAMS].page;\n      this.reverse = data[PAGING_PARAMS].ascending;\n      this.predicate = data[PAGING_PARAMS].predicate;\n    });\n  }\n\n  ngOnInit() {\n    this.accountService.identity().then(account => {\n      this.currentAccount = account;\n      this.loadAll();\n      this.registerChangeInUsers();\n    });\n  }\n\n  ngOnDestroy() {\n    this.routeData.unsubscribe();\n  }\n\n  registerChangeInUsers() {\n    this.eventManager.subscribe(USER_LIST_MODIFICATION, response => this.loadAll());\n  }\n\n  setActive(user, isActivated) {\n    user.activated = isActivated;\n\n    this.userService.update(user).subscribe(response => {\n      if (response.status === 200) {\n        this.error = null;\n        this.success = 'OK';\n        this.loadAll();\n      } else {\n        this.success = null;\n        this.error = 'ERROR';\n      }\n    });\n  }\n\n  loadAll() {\n    this.userService\n      .query({\n        page: this.page - 1,\n        size: this.itemsPerPage,\n        sort: this.sort()\n      })\n      .subscribe((res: HttpResponse<User[]>) => this.onSuccess(res.body, res.headers), (res: HttpResponse<any>) => this.onError(res.body));\n  }\n\n  trackIdentity(index, item: User) {\n    return item.id;\n  }\n\n  sort() {\n    const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n    if (this.predicate !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  loadPage(page: number) {\n    if (page !== this.previousPage) {\n      this.previousPage = page;\n      this.transition();\n    }\n  }\n\n  transition() {\n    this.router.navigate([ADMIN_USER_MANAGEMENT], {\n      queryParams: {\n        page: this.page,\n        sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n      }\n    });\n    this.loadAll();\n  }\n\n  deleteUser(user: User) {\n    const modalRef = this.modalService.open(UserMgmtDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n    modalRef.componentInstance.user = user;\n    modalRef.result.then(\n      result => {\n        // Left blank intentionally, nothing to do here\n      },\n      reason => {\n        // Left blank intentionally, nothing to do here\n      }\n    );\n  }\n\n  private onSuccess(data, headers) {\n    this.links = this.parseLinks.parse(headers.get('link'));\n    this.totalItems = headers.get(X_TOTAL_COUNT);\n    this.users = data;\n  }\n\n  private onError(error) {\n    this.alertService.error(error.error, error.message, null);\n  }\n}\n"]}]}