{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/password/password-strength-bar.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/account/password/password-strength-bar.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b;\nconst core_1 = require(\"@angular/core\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet PasswordStrengthBarComponent = class PasswordStrengthBarComponent {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n    }\n    measureStrength(p) {\n        let force = 0;\n        const regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n        const lowerLetters = /[a-z]+/.test(p);\n        const upperLetters = /[A-Z]+/.test(p);\n        const numbers = /[0-9]+/.test(p);\n        const symbols = regex.test(p);\n        const flags = [lowerLetters, upperLetters, numbers, symbols];\n        const passedMatches = flags.filter((isMatchedFlag) => {\n            return isMatchedFlag === true;\n        }).length;\n        force += 2 * p.length + (p.length >= 10 ? 1 : 0);\n        force += passedMatches * 10;\n        // penalty (short password)\n        force = p.length <= 6 ? Math.min(force, 10) : force;\n        // penalty (poor variety of characters)\n        force = passedMatches === 1 ? Math.min(force, 10) : force;\n        force = passedMatches === 2 ? Math.min(force, 20) : force;\n        force = passedMatches === 3 ? Math.min(force, 40) : force;\n        return force;\n    }\n    getColor(s) {\n        let idx = 0;\n        if (s <= 10) {\n            idx = 0;\n        }\n        else if (s <= 20) {\n            idx = 1;\n        }\n        else if (s <= 30) {\n            idx = 2;\n        }\n        else if (s <= 40) {\n            idx = 3;\n        }\n        else {\n            idx = 4;\n        }\n        return { idx: idx + 1, col: this.colors[idx] };\n    }\n    set passwordToCheck(password) {\n        if (password) {\n            const c = this.getColor(this.measureStrength(password));\n            const element = this.elementRef.nativeElement;\n            if (element.className) {\n                this.renderer.setElementClass(element, element.className, false);\n            }\n            const lis = element.getElementsByTagName('li');\n            for (let i = 0; i < lis.length; i++) {\n                if (i < c.idx) {\n                    this.renderer.setElementStyle(lis[i], app_constants_1.BACKGROUNDCOLOR, c.col);\n                }\n                else {\n                    this.renderer.setElementStyle(lis[i], app_constants_1.BACKGROUNDCOLOR, '#DDD');\n                }\n            }\n        }\n    }\n};\ntslib_1.__decorate([\n    core_1.Input(),\n    tslib_1.__metadata(\"design:type\", String),\n    tslib_1.__metadata(\"design:paramtypes\", [String])\n], PasswordStrengthBarComponent.prototype, \"passwordToCheck\", null);\nPasswordStrengthBarComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-password-strength-bar',\n        template: `\n    <div id=\"strength\">\n      <small>Password strength:</small>\n      <ul id=\"strengthBar\">\n        <li class=\"point\"></li>\n        <li class=\"point\"></li>\n        <li class=\"point\"></li>\n        <li class=\"point\"></li>\n        <li class=\"point\"></li>\n      </ul>\n    </div>\n  `,\n        styleUrls: ['password-strength-bar.scss']\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _a : Object, typeof (_b = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _b : Object])\n], PasswordStrengthBarComponent);\nexports.PasswordStrengthBarComponent = PasswordStrengthBarComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/account/password/password-strength-bar.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/password/password-strength-bar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, Input, Renderer } from '@angular/core';\nimport { BACKGROUNDCOLOR } from 'app/app.constants';\n\n@Component({\n  selector: 'jhi-password-strength-bar',\n  template: `\n    <div id=\"strength\">\n      <small>Password strength:</small>\n      <ul id=\"strengthBar\">\n        <li class=\"point\"></li>\n        <li class=\"point\"></li>\n        <li class=\"point\"></li>\n        <li class=\"point\"></li>\n        <li class=\"point\"></li>\n      </ul>\n    </div>\n  `,\n  styleUrls: ['password-strength-bar.scss']\n})\nexport class PasswordStrengthBarComponent {\n  colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n\n  constructor(private renderer: Renderer, private elementRef: ElementRef) {}\n\n  measureStrength(p: string): number {\n    let force = 0;\n    const regex = /[$-/:-?{-~!\"^_`\\[\\]]/g; // \"\n    const lowerLetters = /[a-z]+/.test(p);\n    const upperLetters = /[A-Z]+/.test(p);\n    const numbers = /[0-9]+/.test(p);\n    const symbols = regex.test(p);\n\n    const flags = [lowerLetters, upperLetters, numbers, symbols];\n    const passedMatches = flags.filter((isMatchedFlag: boolean) => {\n      return isMatchedFlag === true;\n    }).length;\n\n    force += 2 * p.length + (p.length >= 10 ? 1 : 0);\n    force += passedMatches * 10;\n\n    // penalty (short password)\n    force = p.length <= 6 ? Math.min(force, 10) : force;\n\n    // penalty (poor variety of characters)\n    force = passedMatches === 1 ? Math.min(force, 10) : force;\n    force = passedMatches === 2 ? Math.min(force, 20) : force;\n    force = passedMatches === 3 ? Math.min(force, 40) : force;\n\n    return force;\n  }\n\n  getColor(s: number): any {\n    let idx = 0;\n    if (s <= 10) {\n      idx = 0;\n    } else if (s <= 20) {\n      idx = 1;\n    } else if (s <= 30) {\n      idx = 2;\n    } else if (s <= 40) {\n      idx = 3;\n    } else {\n      idx = 4;\n    }\n    return { idx: idx + 1, col: this.colors[idx] };\n  }\n\n  @Input()\n  set passwordToCheck(password: string) {\n    if (password) {\n      const c = this.getColor(this.measureStrength(password));\n      const element = this.elementRef.nativeElement;\n      if (element.className) {\n        this.renderer.setElementClass(element, element.className, false);\n      }\n      const lis = element.getElementsByTagName('li');\n      for (let i = 0; i < lis.length; i++) {\n        if (i < c.idx) {\n          this.renderer.setElementStyle(lis[i], BACKGROUNDCOLOR, c.col);\n        } else {\n          this.renderer.setElementStyle(lis[i], BACKGROUNDCOLOR, '#DDD');\n        }\n      }\n    }\n  }\n}\n"]}]}