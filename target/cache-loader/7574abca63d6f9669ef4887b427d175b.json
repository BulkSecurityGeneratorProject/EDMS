{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","mtime":1573033582433},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a;\nconst core_1 = require(\"@angular/core\");\nconst http_1 = require(\"@angular/common/http\");\nconst operators_1 = require(\"rxjs/operators\");\nconst login_service_1 = require(\"app/core/login/login.service\");\nlet AuthExpiredInterceptor = class AuthExpiredInterceptor {\n    constructor(loginService) {\n        this.loginService = loginService;\n    }\n    intercept(request, next) {\n        return next.handle(request).pipe(operators_1.tap((event) => { }, (err) => {\n            if (err instanceof http_1.HttpErrorResponse) {\n                if (err.status === 401) {\n                    this.loginService.logout();\n                }\n            }\n        }));\n    }\n};\nAuthExpiredInterceptor = tslib_1.__decorate([\n    core_1.Injectable(),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof login_service_1.LoginService !== \"undefined\" && login_service_1.LoginService) === \"function\" ? _a : Object])\n], AuthExpiredInterceptor);\nexports.AuthExpiredInterceptor = AuthExpiredInterceptor;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/auth-expired.interceptor.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,+CAA+G;AAE/G,8CAAqC;AACrC,gEAA4D;AAG5D,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IACjC,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAElD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,eAAG,CACD,CAAC,KAAqB,EAAE,EAAE,GAAE,CAAC,EAC7B,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,GAAG,YAAY,wBAAiB,EAAE;gBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC5B;aACF;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AAjBY,sBAAsB;IADlC,iBAAU,EAAE;iEAEuB,4BAAY,oBAAZ,4BAAY;GADnC,sBAAsB,CAiBlC;AAjBY,wDAAsB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { LoginService } from 'app/core/login/login.service';\n\n@Injectable()\nexport class AuthExpiredInterceptor implements HttpInterceptor {\n  constructor(private loginService: LoginService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap(\n        (event: HttpEvent<any>) => {},\n        (err: any) => {\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 401) {\n              this.loginService.logout();\n            }\n          }\n        }\n      )\n    );\n  }\n}\n"]}]}