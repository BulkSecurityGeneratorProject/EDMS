{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","mtime":1573033582437},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c;\nconst core_1 = require(\"@angular/core\");\nconst account_service_1 = require(\"app/core/auth/account.service\");\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\nlet HasAnyAuthorityDirective = class HasAnyAuthorityDirective {\n    constructor(accountService, templateRef, viewContainerRef) {\n        this.accountService = accountService;\n        this.templateRef = templateRef;\n        this.viewContainerRef = viewContainerRef;\n    }\n    set jhiHasAnyAuthority(value) {\n        this.authorities = typeof value === 'string' ? [value] : value;\n        this.updateView();\n        // Get notified each time authentication state changes.\n        this.accountService.getAuthenticationState().subscribe(identity => this.updateView());\n    }\n    updateView() {\n        const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\n        this.viewContainerRef.clear();\n        if (hasAnyAuthority) {\n            this.viewContainerRef.createEmbeddedView(this.templateRef);\n        }\n    }\n};\ntslib_1.__decorate([\n    core_1.Input(),\n    tslib_1.__metadata(\"design:type\", Object),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], HasAnyAuthorityDirective.prototype, \"jhiHasAnyAuthority\", null);\nHasAnyAuthorityDirective = tslib_1.__decorate([\n    core_1.Directive({\n        selector: '[jhiHasAnyAuthority]'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof account_service_1.AccountService !== \"undefined\" && account_service_1.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof core_1.TemplateRef !== \"undefined\" && core_1.TemplateRef) === \"function\" ? _b : Object, typeof (_c = typeof core_1.ViewContainerRef !== \"undefined\" && core_1.ViewContainerRef) === \"function\" ? _c : Object])\n], HasAnyAuthorityDirective);\nexports.HasAnyAuthorityDirective = HasAnyAuthorityDirective;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/shared/auth/has-any-authority.directive.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/shared/auth/has-any-authority.directive.ts"],"names":[],"mappings":";;;;AAAA,wCAAgF;AAChF,mEAA+D;AAE/D;;;;;;;;;;GAUG;AAIH,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAGnC,YAAoB,cAA8B,EAAU,WAA6B,EAAU,gBAAkC;QAAjH,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAkB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAG,CAAC;IAGzI,IAAI,kBAAkB,CAAC,KAAwB;QAC7C,IAAI,CAAC,WAAW,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,uDAAuD;QACvD,IAAI,CAAC,cAAc,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAEO,UAAU;QAChB,MAAM,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9E,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC5D;IACH,CAAC;CACF,CAAA;AAdC;IADC,YAAK,EAAE;;;kEAMP;AAXU,wBAAwB;IAHpC,gBAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;KACjC,CAAC;iEAIoC,gCAAc,oBAAd,gCAAc,oDAAuB,kBAAW,oBAAX,kBAAW,oDAAiC,uBAAgB,oBAAhB,uBAAgB;GAH1H,wBAAwB,CAoBpC;AApBY,4DAAwB","sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { AccountService } from 'app/core/auth/account.service';\n\n/**\n * @whatItDoes Conditionally includes an HTML element if current user has any\n * of the authorities passed as the `expression`.\n *\n * @howToUse\n * ```\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\n *\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\n * ```\n */\n@Directive({\n  selector: '[jhiHasAnyAuthority]'\n})\nexport class HasAnyAuthorityDirective {\n  private authorities: string[];\n\n  constructor(private accountService: AccountService, private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef) {}\n\n  @Input()\n  set jhiHasAnyAuthority(value: string | string[]) {\n    this.authorities = typeof value === 'string' ? [value] : value;\n    this.updateView();\n    // Get notified each time authentication state changes.\n    this.accountService.getAuthenticationState().subscribe(identity => this.updateView());\n  }\n\n  private updateView(): void {\n    const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\n    this.viewContainerRef.clear();\n    if (hasAnyAuthority) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n"]}]}