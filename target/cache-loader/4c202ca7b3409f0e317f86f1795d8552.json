{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","mtime":1573033582433},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a;\nconst core_1 = require(\"@angular/core\");\nconst ng_jhipster_1 = require(\"ng-jhipster\");\nconst http_1 = require(\"@angular/common/http\");\nconst operators_1 = require(\"rxjs/operators\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet ErrorHandlerInterceptor = class ErrorHandlerInterceptor {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n    }\n    intercept(request, next) {\n        return next.handle(request).pipe(operators_1.tap((event) => { }, (err) => {\n            if (err instanceof http_1.HttpErrorResponse) {\n                if (!(err.status === 401 && (err.message === '' || (err.url && err.url.includes(app_constants_1.API_ACCOUNT))))) {\n                    this.eventManager.broadcast({ name: app_constants_1.EDMSAPP_HTTPERROR, content: err });\n                }\n            }\n        }));\n    }\n};\nErrorHandlerInterceptor = tslib_1.__decorate([\n    core_1.Injectable(),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _a : Object])\n], ErrorHandlerInterceptor);\nexports.ErrorHandlerInterceptor = ErrorHandlerInterceptor;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/errorhandler.interceptor.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,6CAA8C;AAC9C,+CAA+G;AAE/G,8CAAqC;AACrC,qDAAmE;AAGnE,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAClC,YAAoB,YAA6B;QAA7B,iBAAY,GAAZ,YAAY,CAAiB;IAAG,CAAC;IAErD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,eAAG,CACD,CAAC,KAAqB,EAAE,EAAE,GAAE,CAAC,EAC7B,CAAC,GAAQ,EAAE,EAAE;YACX,IAAI,GAAG,YAAY,wBAAiB,EAAE;gBACpC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,2BAAW,CAAC,CAAC,CAAC,CAAC,EAAE;oBAC/F,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,iCAAiB,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;iBACxE;aACF;QACH,CAAC,CACF,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AAjBY,uBAAuB;IADnC,iBAAU,EAAE;iEAEuB,6BAAe,oBAAf,6BAAe;GADtC,uBAAuB,CAiBnC;AAjBY,0DAAuB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { JhiEventManager } from 'ng-jhipster';\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { API_ACCOUNT, EDMSAPP_HTTPERROR } from 'app/app.constants';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  constructor(private eventManager: JhiEventManager) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap(\n        (event: HttpEvent<any>) => {},\n        (err: any) => {\n          if (err instanceof HttpErrorResponse) {\n            if (!(err.status === 401 && (err.message === '' || (err.url && err.url.includes(API_ACCOUNT))))) {\n              this.eventManager.broadcast({ name: EDMSAPP_HTTPERROR, content: err });\n            }\n          }\n        }\n      )\n    );\n  }\n}\n"]}]}