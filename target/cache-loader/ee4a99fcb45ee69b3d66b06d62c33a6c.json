{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/user-management/user-management-update.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/admin/user-management/user-management-update.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c, _d;\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst router_1 = require(\"@angular/router\");\nconst core_2 = require(\"app/core\");\nlet UserMgmtUpdateComponent = class UserMgmtUpdateComponent {\n    constructor(userService, route, router, fb) {\n        this.userService = userService;\n        this.route = route;\n        this.router = router;\n        this.fb = fb;\n        this.editForm = this.fb.group({\n            id: [null],\n            login: ['', [forms_1.Validators.required, forms_1.Validators.minLength(1), forms_1.Validators.maxLength(50), forms_1.Validators.pattern('^[_.@A-Za-z0-9-]*')]],\n            firstName: ['', [forms_1.Validators.maxLength(50)]],\n            lastName: ['', [forms_1.Validators.maxLength(50)]],\n            email: ['', [forms_1.Validators.minLength(5), forms_1.Validators.maxLength(254), forms_1.Validators.email]],\n            activated: [true],\n            langKey: [],\n            authorities: []\n        });\n    }\n    ngOnInit() {\n        this.isSaving = false;\n        this.route.data.subscribe(({ user }) => {\n            this.user = user.body ? user.body : user;\n            this.updateForm(this.user);\n        });\n        this.authorities = [];\n        this.userService.authorities().subscribe(authorities => {\n            this.authorities = authorities;\n        });\n    }\n    updateForm(user) {\n        this.editForm.patchValue({\n            id: user.id,\n            login: user.login,\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            activated: user.activated,\n            langKey: user.langKey,\n            authorities: user.authorities\n        });\n    }\n    previousState() {\n        window.history.back();\n    }\n    save() {\n        this.isSaving = true;\n        this.updateUser(this.user);\n        if (this.user.id !== null) {\n            this.userService.update(this.user).subscribe(response => this.onSaveSuccess(response), () => this.onSaveError());\n        }\n        else {\n            this.user.langKey = 'en';\n            this.userService.create(this.user).subscribe(response => this.onSaveSuccess(response), () => this.onSaveError());\n        }\n    }\n    updateUser(user) {\n        user.login = this.editForm.get(['login']).value;\n        user.firstName = this.editForm.get(['firstName']).value;\n        user.lastName = this.editForm.get(['lastName']).value;\n        user.email = this.editForm.get(['email']).value;\n        user.activated = this.editForm.get(['activated']).value;\n        user.langKey = this.editForm.get(['langKey']).value;\n        user.authorities = this.editForm.get(['authorities']).value;\n    }\n    onSaveSuccess(result) {\n        this.isSaving = false;\n        this.previousState();\n    }\n    onSaveError() {\n        this.isSaving = false;\n    }\n};\nUserMgmtUpdateComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-user-mgmt-update',\n        templateUrl: './user-management-update.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _b : Object, typeof (_c = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _c : Object, typeof (_d = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _d : Object])\n], UserMgmtUpdateComponent);\nexports.UserMgmtUpdateComponent = UserMgmtUpdateComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/admin/user-management/user-management-update.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/user-management/user-management-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { User, UserService } from 'app/core';\n\n@Component({\n  selector: 'jhi-user-mgmt-update',\n  templateUrl: './user-management-update.component.html'\n})\nexport class UserMgmtUpdateComponent implements OnInit {\n  user: User;\n  languages: any[];\n  authorities: any[];\n  isSaving: boolean;\n\n  editForm = this.fb.group({\n    id: [null],\n    login: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(50), Validators.pattern('^[_.@A-Za-z0-9-]*')]],\n    firstName: ['', [Validators.maxLength(50)]],\n    lastName: ['', [Validators.maxLength(50)]],\n    email: ['', [Validators.minLength(5), Validators.maxLength(254), Validators.email]],\n    activated: [true],\n    langKey: [],\n    authorities: []\n  });\n\n  constructor(private userService: UserService, private route: ActivatedRoute, private router: Router, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.route.data.subscribe(({ user }) => {\n      this.user = user.body ? user.body : user;\n      this.updateForm(this.user);\n    });\n    this.authorities = [];\n    this.userService.authorities().subscribe(authorities => {\n      this.authorities = authorities;\n    });\n  }\n\n  private updateForm(user: User): void {\n    this.editForm.patchValue({\n      id: user.id,\n      login: user.login,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      activated: user.activated,\n      langKey: user.langKey,\n      authorities: user.authorities\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    this.updateUser(this.user);\n    if (this.user.id !== null) {\n      this.userService.update(this.user).subscribe(response => this.onSaveSuccess(response), () => this.onSaveError());\n    } else {\n      this.user.langKey = 'en';\n      this.userService.create(this.user).subscribe(response => this.onSaveSuccess(response), () => this.onSaveError());\n    }\n  }\n\n  private updateUser(user: User): void {\n    user.login = this.editForm.get(['login']).value;\n    user.firstName = this.editForm.get(['firstName']).value;\n    user.lastName = this.editForm.get(['lastName']).value;\n    user.email = this.editForm.get(['email']).value;\n    user.activated = this.editForm.get(['activated']).value;\n    user.langKey = this.editForm.get(['langKey']).value;\n    user.authorities = this.editForm.get(['authorities']).value;\n  }\n\n  private onSaveSuccess(result) {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  private onSaveError() {\n    this.isSaving = false;\n  }\n}\n"]}]}