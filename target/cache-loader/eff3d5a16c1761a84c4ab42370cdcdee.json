{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/entities/professional-history/professional-history-update.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/entities/professional-history/professional-history-update.component.ts","mtime":1573033582433},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c;\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst router_1 = require(\"@angular/router\");\nconst professional_history_model_1 = require(\"app/shared/model/professional-history.model\");\nconst professional_history_service_1 = require(\"./professional-history.service\");\nlet ProfessionalHistoryUpdateComponent = class ProfessionalHistoryUpdateComponent {\n    constructor(professionalHistoryService, activatedRoute, fb) {\n        this.professionalHistoryService = professionalHistoryService;\n        this.activatedRoute = activatedRoute;\n        this.fb = fb;\n        this.editForm = this.fb.group({\n            id: [],\n            professionalId: [],\n            empType: [],\n            srsEmpId: [],\n            fullName: [],\n            firstName: [],\n            lastName: [],\n            education: [],\n            certification: [],\n            email: [],\n            homePhone: [],\n            mobileNumber: [],\n            workPhoneNumber: [],\n            dOB: [],\n            status: [],\n            city: [],\n            location: [],\n            totalExperience: [],\n            jobTitle: [],\n            typeOfRole: [],\n            skillCategory: [],\n            specificSkills: [],\n            generalSkills: [],\n            clientDomain: [],\n            mode: [],\n            employer: [],\n            primeVendor: [],\n            endClient: [],\n            currentProjectStartDate: [],\n            currentProjectEndDate: [],\n            remarks: [],\n            sellRate: [],\n            workAuthorization: [],\n            addedOn: [],\n            benchAge: [],\n            technology: [],\n            payType: [],\n            additionalNotifiers: [],\n            source: [],\n            workExperience: [],\n            primarySkills: [],\n            sellRateHelper: [],\n            createdBy: [],\n            createdDate: [],\n            updatedBy: [],\n            updatedDate: []\n        });\n    }\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ professionalHistory }) => {\n            this.updateForm(professionalHistory);\n            this.professionalHistory = professionalHistory;\n        });\n    }\n    updateForm(professionalHistory) {\n        this.editForm.patchValue({\n            id: professionalHistory.id,\n            professionalId: professionalHistory.professionalId,\n            empType: professionalHistory.empType,\n            srsEmpId: professionalHistory.srsEmpId,\n            fullName: professionalHistory.fullName,\n            firstName: professionalHistory.firstName,\n            lastName: professionalHistory.lastName,\n            education: professionalHistory.education,\n            certification: professionalHistory.certification,\n            email: professionalHistory.email,\n            homePhone: professionalHistory.homePhone,\n            mobileNumber: professionalHistory.mobileNumber,\n            workPhoneNumber: professionalHistory.workPhoneNumber,\n            dOB: professionalHistory.dOB,\n            status: professionalHistory.status,\n            city: professionalHistory.city,\n            location: professionalHistory.location,\n            totalExperience: professionalHistory.totalExperience,\n            jobTitle: professionalHistory.jobTitle,\n            typeOfRole: professionalHistory.typeOfRole,\n            skillCategory: professionalHistory.skillCategory,\n            specificSkills: professionalHistory.specificSkills,\n            generalSkills: professionalHistory.generalSkills,\n            clientDomain: professionalHistory.clientDomain,\n            mode: professionalHistory.mode,\n            employer: professionalHistory.employer,\n            primeVendor: professionalHistory.primeVendor,\n            endClient: professionalHistory.endClient,\n            currentProjectStartDate: professionalHistory.currentProjectStartDate,\n            currentProjectEndDate: professionalHistory.currentProjectEndDate,\n            remarks: professionalHistory.remarks,\n            sellRate: professionalHistory.sellRate,\n            workAuthorization: professionalHistory.workAuthorization,\n            addedOn: professionalHistory.addedOn,\n            benchAge: professionalHistory.benchAge,\n            technology: professionalHistory.technology,\n            payType: professionalHistory.payType,\n            additionalNotifiers: professionalHistory.additionalNotifiers,\n            source: professionalHistory.source,\n            workExperience: professionalHistory.workExperience,\n            primarySkills: professionalHistory.primarySkills,\n            sellRateHelper: professionalHistory.sellRateHelper,\n            createdBy: professionalHistory.createdBy,\n            createdDate: professionalHistory.createdDate,\n            updatedBy: professionalHistory.updatedBy,\n            updatedDate: professionalHistory.updatedDate\n        });\n    }\n    previousState() {\n        window.history.back();\n    }\n    save() {\n        this.isSaving = true;\n        const professionalHistory = this.createFromForm();\n        if (professionalHistory.id !== undefined) {\n            this.subscribeToSaveResponse(this.professionalHistoryService.update(professionalHistory));\n        }\n        else {\n            this.subscribeToSaveResponse(this.professionalHistoryService.create(professionalHistory));\n        }\n    }\n    createFromForm() {\n        return Object.assign({}, new professional_history_model_1.ProfessionalHistory(), { id: this.editForm.get(['id']).value, professionalId: this.editForm.get(['professionalId']).value, empType: this.editForm.get(['empType']).value, srsEmpId: this.editForm.get(['srsEmpId']).value, fullName: this.editForm.get(['fullName']).value, firstName: this.editForm.get(['firstName']).value, lastName: this.editForm.get(['lastName']).value, education: this.editForm.get(['education']).value, certification: this.editForm.get(['certification']).value, email: this.editForm.get(['email']).value, homePhone: this.editForm.get(['homePhone']).value, mobileNumber: this.editForm.get(['mobileNumber']).value, workPhoneNumber: this.editForm.get(['workPhoneNumber']).value, dOB: this.editForm.get(['dOB']).value, status: this.editForm.get(['status']).value, city: this.editForm.get(['city']).value, location: this.editForm.get(['location']).value, totalExperience: this.editForm.get(['totalExperience']).value, jobTitle: this.editForm.get(['jobTitle']).value, typeOfRole: this.editForm.get(['typeOfRole']).value, skillCategory: this.editForm.get(['skillCategory']).value, specificSkills: this.editForm.get(['specificSkills']).value, generalSkills: this.editForm.get(['generalSkills']).value, clientDomain: this.editForm.get(['clientDomain']).value, mode: this.editForm.get(['mode']).value, employer: this.editForm.get(['employer']).value, primeVendor: this.editForm.get(['primeVendor']).value, endClient: this.editForm.get(['endClient']).value, currentProjectStartDate: this.editForm.get(['currentProjectStartDate']).value, currentProjectEndDate: this.editForm.get(['currentProjectEndDate']).value, remarks: this.editForm.get(['remarks']).value, sellRate: this.editForm.get(['sellRate']).value, workAuthorization: this.editForm.get(['workAuthorization']).value, addedOn: this.editForm.get(['addedOn']).value, benchAge: this.editForm.get(['benchAge']).value, technology: this.editForm.get(['technology']).value, payType: this.editForm.get(['payType']).value, additionalNotifiers: this.editForm.get(['additionalNotifiers']).value, source: this.editForm.get(['source']).value, workExperience: this.editForm.get(['workExperience']).value, primarySkills: this.editForm.get(['primarySkills']).value, sellRateHelper: this.editForm.get(['sellRateHelper']).value, createdBy: this.editForm.get(['createdBy']).value, createdDate: this.editForm.get(['createdDate']).value, updatedBy: this.editForm.get(['updatedBy']).value, updatedDate: this.editForm.get(['updatedDate']).value });\n    }\n    subscribeToSaveResponse(result) {\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\n    }\n    onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n    onSaveError() {\n        this.isSaving = false;\n    }\n};\nProfessionalHistoryUpdateComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-professional-history-update',\n        templateUrl: './professional-history-update.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof professional_history_service_1.ProfessionalHistoryService !== \"undefined\" && professional_history_service_1.ProfessionalHistoryService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _b : Object, typeof (_c = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _c : Object])\n], ProfessionalHistoryUpdateComponent);\nexports.ProfessionalHistoryUpdateComponent = ProfessionalHistoryUpdateComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/entities/professional-history/professional-history-update.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/entities/professional-history/professional-history-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {FormBuilder} from '@angular/forms';\nimport {ActivatedRoute} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {IProfessionalHistory, ProfessionalHistory} from 'app/shared/model/professional-history.model';\nimport {ProfessionalHistoryService} from './professional-history.service';\n\n@Component({\n  selector: 'jhi-professional-history-update',\n  templateUrl: './professional-history-update.component.html'\n})\nexport class ProfessionalHistoryUpdateComponent implements OnInit {\n  professionalHistory: IProfessionalHistory;\n  isSaving: boolean;\n  currentProjectStartDateDp: any;\n  currentProjectEndDateDp: any;\n  createdDateDp: any;\n  updatedDateDp: any;\n\n  editForm = this.fb.group({\n    id: [],\n    professionalId: [],\n    empType: [],\n    srsEmpId: [],\n    fullName: [],\n    firstName: [],\n    lastName: [],\n    education: [],\n    certification: [],\n    email: [],\n    homePhone: [],\n    mobileNumber: [],\n    workPhoneNumber: [],\n    dOB: [],\n    status: [],\n    city: [],\n    location: [],\n    totalExperience: [],\n    jobTitle: [],\n    typeOfRole: [],\n    skillCategory: [],\n    specificSkills: [],\n    generalSkills: [],\n    clientDomain: [],\n    mode: [],\n    employer: [],\n    primeVendor: [],\n    endClient: [],\n    currentProjectStartDate: [],\n    currentProjectEndDate: [],\n    remarks: [],\n    sellRate: [],\n    workAuthorization: [],\n    addedOn: [],\n    benchAge: [],\n    technology: [],\n    payType: [],\n    additionalNotifiers: [],\n    source: [],\n    workExperience: [],\n    primarySkills: [],\n    sellRateHelper: [],\n    createdBy: [],\n    createdDate: [],\n    updatedBy: [],\n    updatedDate: []\n  });\n\n  constructor(\n    protected professionalHistoryService: ProfessionalHistoryService,\n    protected activatedRoute: ActivatedRoute,\n    private fb: FormBuilder\n  ) {}\n\n  ngOnInit() {\n    this.isSaving = false;\n    this.activatedRoute.data.subscribe(({ professionalHistory }) => {\n      this.updateForm(professionalHistory);\n      this.professionalHistory = professionalHistory;\n    });\n  }\n\n  updateForm(professionalHistory: IProfessionalHistory) {\n    this.editForm.patchValue({\n      id: professionalHistory.id,\n      professionalId: professionalHistory.professionalId,\n      empType: professionalHistory.empType,\n      srsEmpId: professionalHistory.srsEmpId,\n      fullName: professionalHistory.fullName,\n      firstName: professionalHistory.firstName,\n      lastName: professionalHistory.lastName,\n      education: professionalHistory.education,\n      certification: professionalHistory.certification,\n      email: professionalHistory.email,\n      homePhone: professionalHistory.homePhone,\n      mobileNumber: professionalHistory.mobileNumber,\n      workPhoneNumber: professionalHistory.workPhoneNumber,\n      dOB: professionalHistory.dOB,\n      status: professionalHistory.status,\n      city: professionalHistory.city,\n      location: professionalHistory.location,\n      totalExperience: professionalHistory.totalExperience,\n      jobTitle: professionalHistory.jobTitle,\n      typeOfRole: professionalHistory.typeOfRole,\n      skillCategory: professionalHistory.skillCategory,\n      specificSkills: professionalHistory.specificSkills,\n      generalSkills: professionalHistory.generalSkills,\n      clientDomain: professionalHistory.clientDomain,\n      mode: professionalHistory.mode,\n      employer: professionalHistory.employer,\n      primeVendor: professionalHistory.primeVendor,\n      endClient: professionalHistory.endClient,\n      currentProjectStartDate: professionalHistory.currentProjectStartDate,\n      currentProjectEndDate: professionalHistory.currentProjectEndDate,\n      remarks: professionalHistory.remarks,\n      sellRate: professionalHistory.sellRate,\n      workAuthorization: professionalHistory.workAuthorization,\n      addedOn: professionalHistory.addedOn,\n      benchAge: professionalHistory.benchAge,\n      technology: professionalHistory.technology,\n      payType: professionalHistory.payType,\n      additionalNotifiers: professionalHistory.additionalNotifiers,\n      source: professionalHistory.source,\n      workExperience: professionalHistory.workExperience,\n      primarySkills: professionalHistory.primarySkills,\n      sellRateHelper: professionalHistory.sellRateHelper,\n      createdBy: professionalHistory.createdBy,\n      createdDate: professionalHistory.createdDate,\n      updatedBy: professionalHistory.updatedBy,\n      updatedDate: professionalHistory.updatedDate\n    });\n  }\n\n  previousState() {\n    window.history.back();\n  }\n\n  save() {\n    this.isSaving = true;\n    const professionalHistory = this.createFromForm();\n    if (professionalHistory.id !== undefined) {\n      this.subscribeToSaveResponse(this.professionalHistoryService.update(professionalHistory));\n    } else {\n      this.subscribeToSaveResponse(this.professionalHistoryService.create(professionalHistory));\n    }\n  }\n\n  private createFromForm(): IProfessionalHistory {\n    return {\n      ...new ProfessionalHistory(),\n      id: this.editForm.get(['id']).value,\n      professionalId: this.editForm.get(['professionalId']).value,\n      empType: this.editForm.get(['empType']).value,\n      srsEmpId: this.editForm.get(['srsEmpId']).value,\n      fullName: this.editForm.get(['fullName']).value,\n      firstName: this.editForm.get(['firstName']).value,\n      lastName: this.editForm.get(['lastName']).value,\n      education: this.editForm.get(['education']).value,\n      certification: this.editForm.get(['certification']).value,\n      email: this.editForm.get(['email']).value,\n      homePhone: this.editForm.get(['homePhone']).value,\n      mobileNumber: this.editForm.get(['mobileNumber']).value,\n      workPhoneNumber: this.editForm.get(['workPhoneNumber']).value,\n      dOB: this.editForm.get(['dOB']).value,\n      status: this.editForm.get(['status']).value,\n      city: this.editForm.get(['city']).value,\n      location: this.editForm.get(['location']).value,\n      totalExperience: this.editForm.get(['totalExperience']).value,\n      jobTitle: this.editForm.get(['jobTitle']).value,\n      typeOfRole: this.editForm.get(['typeOfRole']).value,\n      skillCategory: this.editForm.get(['skillCategory']).value,\n      specificSkills: this.editForm.get(['specificSkills']).value,\n      generalSkills: this.editForm.get(['generalSkills']).value,\n      clientDomain: this.editForm.get(['clientDomain']).value,\n      mode: this.editForm.get(['mode']).value,\n      employer: this.editForm.get(['employer']).value,\n      primeVendor: this.editForm.get(['primeVendor']).value,\n      endClient: this.editForm.get(['endClient']).value,\n      currentProjectStartDate: this.editForm.get(['currentProjectStartDate']).value,\n      currentProjectEndDate: this.editForm.get(['currentProjectEndDate']).value,\n      remarks: this.editForm.get(['remarks']).value,\n      sellRate: this.editForm.get(['sellRate']).value,\n      workAuthorization: this.editForm.get(['workAuthorization']).value,\n      addedOn: this.editForm.get(['addedOn']).value,\n      benchAge: this.editForm.get(['benchAge']).value,\n      technology: this.editForm.get(['technology']).value,\n      payType: this.editForm.get(['payType']).value,\n      additionalNotifiers: this.editForm.get(['additionalNotifiers']).value,\n      source: this.editForm.get(['source']).value,\n      workExperience: this.editForm.get(['workExperience']).value,\n      primarySkills: this.editForm.get(['primarySkills']).value,\n      sellRateHelper: this.editForm.get(['sellRateHelper']).value,\n      createdBy: this.editForm.get(['createdBy']).value,\n      createdDate: this.editForm.get(['createdDate']).value,\n      updatedBy: this.editForm.get(['updatedBy']).value,\n      updatedDate: this.editForm.get(['updatedDate']).value\n    };\n  }\n\n  protected subscribeToSaveResponse(result: Observable<HttpResponse<IProfessionalHistory>>) {\n    result.subscribe((res: HttpResponse<IProfessionalHistory>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n  }\n\n  protected onSaveSuccess() {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  protected onSaveError() {\n    this.isSaving = false;\n  }\n}\n"]}]}