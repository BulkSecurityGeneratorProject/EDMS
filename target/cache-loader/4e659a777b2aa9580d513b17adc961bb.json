{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/password/password.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/account/password/password.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c;\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst core_2 = require(\"app/core\");\nconst password_service_1 = require(\"./password.service\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet PasswordComponent = class PasswordComponent {\n    constructor(passwordService, accountService, fb) {\n        this.passwordService = passwordService;\n        this.accountService = accountService;\n        this.fb = fb;\n        this.passwordForm = this.fb.group({\n            currentPassword: ['', [forms_1.Validators.required]],\n            newPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]],\n            confirmPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]]\n        });\n    }\n    ngOnInit() {\n        this.accountService.identity().then(account => {\n            this.account = account;\n        });\n    }\n    changePassword() {\n        const newPassword = this.passwordForm.get([app_constants_1.NEW_PASSWORD]).value;\n        if (newPassword !== this.passwordForm.get([app_constants_1.CONFIRM_PASSWORD]).value) {\n            this.error = null;\n            this.success = null;\n            this.doNotMatch = app_constants_1.ERROR_;\n        }\n        else {\n            this.doNotMatch = null;\n            this.passwordService.save(newPassword, this.passwordForm.get([app_constants_1.CURRENT_PASSWORD]).value).subscribe(() => {\n                this.error = null;\n                this.success = app_constants_1.OK;\n            }, () => {\n                this.success = null;\n                this.error = app_constants_1.ERROR_;\n            });\n        }\n    }\n};\nPasswordComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-password',\n        templateUrl: './password.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof password_service_1.PasswordService !== \"undefined\" && password_service_1.PasswordService) === \"function\" ? _a : Object, typeof (_b = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _b : Object, typeof (_c = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _c : Object])\n], PasswordComponent);\nexports.PasswordComponent = PasswordComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/account/password/password.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/password/password.component.ts"],"names":[],"mappings":";;;;AAAA,wCAAkD;AAClD,0CAAoE;AAEpE,mCAA0C;AAC1C,yDAAqD;AACrD,qDAAiG;AAMjG,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAW5B,YAAoB,eAAgC,EAAU,cAA8B,EAAU,EAAe;QAAjG,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QANrH,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,CAAC,CAAC;YAC5C,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3F,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAChG,CAAC,CAAC;IAEqH,CAAC;IAEzH,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC5C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,4BAAY,CAAC,CAAC,CAAC,KAAK,CAAC;QAChE,IAAI,WAAW,KAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,gCAAgB,CAAC,CAAC,CAAC,KAAK,EAAE;YACnE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,sBAAM,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,gCAAgB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAC/F,GAAG,EAAE;gBACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,OAAO,GAAG,kBAAE,CAAC;YACpB,CAAC,EACD,GAAG,EAAE;gBACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,KAAK,GAAG,sBAAM,CAAC;YACtB,CAAC,CACF,CAAC;SACH;IACH,CAAC;CACF,CAAA;AAvCY,iBAAiB;IAJ7B,gBAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,WAAW,EAAE,2BAA2B;KACzC,CAAC;iEAYqC,kCAAe,oBAAf,kCAAe,oDAA0B,qBAAc,oBAAd,qBAAc,oDAAc,mBAAW,oBAAX,mBAAW;GAX1G,iBAAiB,CAuC7B;AAvCY,8CAAiB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AccountService } from 'app/core';\nimport { PasswordService } from './password.service';\nimport { NEW_PASSWORD, CONFIRM_PASSWORD, ERROR_, CURRENT_PASSWORD, OK } from 'app/app.constants';\n\n@Component({\n  selector: 'jhi-password',\n  templateUrl: './password.component.html'\n})\nexport class PasswordComponent implements OnInit {\n  doNotMatch: string;\n  error: string;\n  success: string;\n  account: any;\n  passwordForm = this.fb.group({\n    currentPassword: ['', [Validators.required]],\n    newPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]]\n  });\n\n  constructor(private passwordService: PasswordService, private accountService: AccountService, private fb: FormBuilder) {}\n\n  ngOnInit() {\n    this.accountService.identity().then(account => {\n      this.account = account;\n    });\n  }\n\n  changePassword() {\n    const newPassword = this.passwordForm.get([NEW_PASSWORD]).value;\n    if (newPassword !== this.passwordForm.get([CONFIRM_PASSWORD]).value) {\n      this.error = null;\n      this.success = null;\n      this.doNotMatch = ERROR_;\n    } else {\n      this.doNotMatch = null;\n      this.passwordService.save(newPassword, this.passwordForm.get([CURRENT_PASSWORD]).value).subscribe(\n        () => {\n          this.error = null;\n          this.success = OK;\n        },\n        () => {\n          this.success = null;\n          this.error = ERROR_;\n        }\n      );\n    }\n  }\n}\n"]}]}