{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/entities/search-history/search-history-update.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/entities/search-history/search-history-update.component.ts","mtime":1573033582433},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c;\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst router_1 = require(\"@angular/router\");\nconst search_history_model_1 = require(\"app/shared/model/search-history.model\");\nconst search_history_service_1 = require(\"./search-history.service\");\nexports.ID = 'id';\nexports.USER_ID = 'userID';\nexports.SEARCH_NAME = 'searchName';\nexports.EMP_TYPE = 'empType';\nexports.DOMAIN = 'domain';\nexports.FROM_EXPERIENCE = 'fromExperience';\nexports.TO_EXPERIENCE = 'toExperience';\nexports.LOCATION = 'location';\nexports.STATUS = 'status';\nexports.END_CLIENT = 'endClient';\nexports.SKILLS = 'skills';\nexports.EMPLOYEE_NAME = 'employeeName';\nlet SearchHistoryUpdateComponent = class SearchHistoryUpdateComponent {\n    constructor(searchHistoryService, activatedRoute, fb) {\n        this.searchHistoryService = searchHistoryService;\n        this.activatedRoute = activatedRoute;\n        this.fb = fb;\n        this.editForm = this.fb.group({\n            id: [],\n            userID: [],\n            searchName: [null, []],\n            empType: [],\n            domain: [],\n            fromExperience: [],\n            toExperience: [],\n            location: [],\n            status: [],\n            endClient: [],\n            skills: [],\n            employeeName: []\n        });\n    }\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ searchHistory }) => {\n            this.updateForm(searchHistory);\n            this.searchHistory = searchHistory;\n        });\n    }\n    updateForm(searchHistory) {\n        this.editForm.patchValue({\n            id: searchHistory.id,\n            userID: searchHistory.userID,\n            searchName: searchHistory.searchName,\n            empType: searchHistory.empType,\n            domain: searchHistory.domain,\n            fromExperience: searchHistory.fromExperience,\n            toExperience: searchHistory.toExperience,\n            location: searchHistory.location,\n            status: searchHistory.status,\n            endClient: searchHistory.endClient,\n            skills: searchHistory.skills,\n            employeeName: searchHistory.employeeName\n        });\n    }\n    previousState() {\n        window.history.back();\n    }\n    save() {\n        this.isSaving = true;\n        const searchHistory = this.createFromForm();\n        if (searchHistory.id !== undefined) {\n            this.subscribeToSaveResponse(this.searchHistoryService.update(searchHistory));\n        }\n        else {\n            this.subscribeToSaveResponse(this.searchHistoryService.create(searchHistory));\n        }\n    }\n    createFromForm() {\n        const entity = Object.assign({}, new search_history_model_1.SearchHistory(), { id: this.editForm.get([exports.ID]).value, userID: this.editForm.get([exports.USER_ID]).value, searchName: this.editForm.get([exports.SEARCH_NAME]).value, empType: this.editForm.get([exports.EMP_TYPE]).value, domain: this.editForm.get([exports.DOMAIN]).value, fromExperience: this.editForm.get([exports.FROM_EXPERIENCE]).value, toExperience: this.editForm.get([exports.TO_EXPERIENCE]).value, location: this.editForm.get([exports.LOCATION]).value, status: this.editForm.get([exports.STATUS]).value, endClient: this.editForm.get([exports.END_CLIENT]).value, skills: this.editForm.get([exports.SKILLS]).value, employeeName: this.editForm.get([exports.EMPLOYEE_NAME]).value });\n        return entity;\n    }\n    subscribeToSaveResponse(result) {\n        result.subscribe((res) => this.onSaveSuccess(), (res) => this.onSaveError());\n    }\n    onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n    onSaveError() {\n        this.isSaving = false;\n    }\n};\nSearchHistoryUpdateComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-search-history-update',\n        templateUrl: './search-history-update.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof search_history_service_1.SearchHistoryService !== \"undefined\" && search_history_service_1.SearchHistoryService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _b : Object, typeof (_c = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _c : Object])\n], SearchHistoryUpdateComponent);\nexports.SearchHistoryUpdateComponent = SearchHistoryUpdateComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/entities/search-history/search-history-update.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/entities/search-history/search-history-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {HttpResponse, HttpErrorResponse} from '@angular/common/http';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {ActivatedRoute} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {ISearchHistory, SearchHistory} from 'app/shared/model/search-history.model';\nimport {SearchHistoryService} from './search-history.service';\n\nexport const ID = 'id';\nexport const USER_ID = 'userID';\nexport const SEARCH_NAME = 'searchName';\nexport const EMP_TYPE = 'empType';\nexport const DOMAIN = 'domain';\nexport const FROM_EXPERIENCE = 'fromExperience';\nexport const TO_EXPERIENCE = 'toExperience';\nexport const LOCATION = 'location';\nexport const STATUS = 'status';\nexport const END_CLIENT = 'endClient';\nexport const SKILLS = 'skills';\nexport const EMPLOYEE_NAME = 'employeeName';\n\n@Component({\n    selector: 'jhi-search-history-update',\n    templateUrl: './search-history-update.component.html'\n})\nexport class SearchHistoryUpdateComponent implements OnInit {\n    searchHistory: ISearchHistory;\n    isSaving: boolean;\n\n    editForm = this.fb.group({\n        id: [],\n        userID: [],\n        searchName: [null, []],\n        empType: [],\n        domain: [],\n        fromExperience: [],\n        toExperience: [],\n        location: [],\n        status: [],\n        endClient: [],\n        skills: [],\n        employeeName: []\n    });\n\n    constructor(protected searchHistoryService: SearchHistoryService, protected activatedRoute: ActivatedRoute, private fb: FormBuilder) {\n    }\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({searchHistory}) => {\n            this.updateForm(searchHistory);\n            this.searchHistory = searchHistory;\n        });\n    }\n\n    updateForm(searchHistory: ISearchHistory) {\n        this.editForm.patchValue({\n            id: searchHistory.id,\n            userID: searchHistory.userID,\n            searchName: searchHistory.searchName,\n            empType: searchHistory.empType,\n            domain: searchHistory.domain,\n            fromExperience: searchHistory.fromExperience,\n            toExperience: searchHistory.toExperience,\n            location: searchHistory.location,\n            status: searchHistory.status,\n            endClient: searchHistory.endClient,\n            skills: searchHistory.skills,\n            employeeName: searchHistory.employeeName\n        });\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        const searchHistory = this.createFromForm();\n        if (searchHistory.id !== undefined) {\n            this.subscribeToSaveResponse(this.searchHistoryService.update(searchHistory));\n        } else {\n            this.subscribeToSaveResponse(this.searchHistoryService.create(searchHistory));\n        }\n    }\n\n    private createFromForm(): ISearchHistory {\n        const entity = {\n            ...new SearchHistory(),\n            id: this.editForm.get([ID]).value,\n            userID: this.editForm.get([USER_ID]).value,\n            searchName: this.editForm.get([SEARCH_NAME]).value,\n            empType: this.editForm.get([EMP_TYPE]).value,\n            domain: this.editForm.get([DOMAIN]).value,\n            fromExperience: this.editForm.get([FROM_EXPERIENCE]).value,\n            toExperience: this.editForm.get([TO_EXPERIENCE]).value,\n            location: this.editForm.get([LOCATION]).value,\n            status: this.editForm.get([STATUS]).value,\n            endClient: this.editForm.get([END_CLIENT]).value,\n            skills: this.editForm.get([SKILLS]).value,\n            employeeName: this.editForm.get([EMPLOYEE_NAME]).value\n        };\n        return entity;\n    }\n\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<ISearchHistory>>) {\n        result.subscribe((res: HttpResponse<ISearchHistory>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    protected onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    protected onSaveError() {\n        this.isSaving = false;\n    }\n}\n"]}]}