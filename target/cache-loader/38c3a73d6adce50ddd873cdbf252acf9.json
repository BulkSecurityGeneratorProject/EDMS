{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c, _d, _e, _f, _g;\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst router_1 = require(\"@angular/router\");\nconst core_2 = require(\"app/core\");\nconst password_reset_finish_service_1 = require(\"./password-reset-finish.service\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet PasswordResetFinishComponent = class PasswordResetFinishComponent {\n    constructor(passwordResetFinishService, router, loginModalService, route, elementRef, renderer, fb) {\n        this.passwordResetFinishService = passwordResetFinishService;\n        this.router = router;\n        this.loginModalService = loginModalService;\n        this.route = route;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.fb = fb;\n        this.passwordForm = this.fb.group({\n            newPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]],\n            confirmPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]]\n        });\n    }\n    ngOnInit() {\n        this.route.queryParams.subscribe(params => {\n            this.key = params[app_constants_1.KEY];\n        });\n        this.keyMissing = !this.key;\n    }\n    ngAfterViewInit() {\n        if (this.elementRef.nativeElement.querySelector(app_constants_1._PASSWORD) != null) {\n            this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector(app_constants_1._PASSWORD), 'focus', []);\n        }\n    }\n    finishReset() {\n        this.doNotMatch = null;\n        this.error = null;\n        const password = this.passwordForm.get([app_constants_1.NEW_PASSWORD]).value;\n        const confirmPassword = this.passwordForm.get([app_constants_1.CONFIRM_PASSWORD]).value;\n        if (password !== confirmPassword) {\n            this.doNotMatch = app_constants_1.ERROR_;\n        }\n        else {\n            this.passwordResetFinishService.save({ key: this.key, newPassword: password }).subscribe(() => {\n                this.success = app_constants_1.OK;\n            }, () => {\n                this.success = null;\n                this.error = app_constants_1.ERROR_;\n            });\n        }\n    }\n    login() {\n        this.router.navigate(['/']);\n    }\n};\nPasswordResetFinishComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-password-reset-finish',\n        templateUrl: './password-reset-finish.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof password_reset_finish_service_1.PasswordResetFinishService !== \"undefined\" && password_reset_finish_service_1.PasswordResetFinishService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _b : Object, typeof (_c = typeof core_2.LoginModalService !== \"undefined\" && core_2.LoginModalService) === \"function\" ? _c : Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _d : Object, typeof (_e = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _e : Object, typeof (_f = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _f : Object, typeof (_g = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _g : Object])\n], PasswordResetFinishComponent);\nexports.PasswordResetFinishComponent = PasswordResetFinishComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/password-reset/finish/password-reset-finish.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {AfterViewInit, Component, ElementRef, OnInit, Renderer} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {LoginModalService} from 'app/core';\nimport {PasswordResetFinishService} from './password-reset-finish.service';\nimport {_PASSWORD, CONFIRM_PASSWORD, ERROR_, KEY, NEW_PASSWORD, OK} from 'app/app.constants';\n\n@Component({\n    selector: 'jhi-password-reset-finish',\n    templateUrl: './password-reset-finish.component.html'\n})\nexport class PasswordResetFinishComponent implements OnInit, AfterViewInit {\n    doNotMatch: string;\n    error: string;\n    keyMissing: boolean;\n    success: string;\n    modalRef: NgbModalRef;\n    key: string;\n\n    passwordForm = this.fb.group({\n        newPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\n        confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]]\n    });\n\n    constructor(\n        private passwordResetFinishService: PasswordResetFinishService,\n        private router: Router,\n        private loginModalService: LoginModalService,\n        private route: ActivatedRoute,\n        private elementRef: ElementRef,\n        private renderer: Renderer,\n        private fb: FormBuilder\n    ) {\n    }\n\n    ngOnInit() {\n        this.route.queryParams.subscribe(params => {\n            this.key = params[KEY];\n        });\n        this.keyMissing = !this.key;\n    }\n\n    ngAfterViewInit() {\n        if (this.elementRef.nativeElement.querySelector(_PASSWORD) != null) {\n            this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector(_PASSWORD), 'focus', []);\n        }\n    }\n\n    finishReset() {\n        this.doNotMatch = null;\n        this.error = null;\n        const password = this.passwordForm.get([NEW_PASSWORD]).value;\n        const confirmPassword = this.passwordForm.get([CONFIRM_PASSWORD]).value;\n        if (password !== confirmPassword) {\n            this.doNotMatch = ERROR_;\n        } else {\n            this.passwordResetFinishService.save({key: this.key, newPassword: password}).subscribe(\n                () => {\n                    this.success = OK;\n                },\n                () => {\n                    this.success = null;\n                    this.error = ERROR_;\n                }\n            );\n        }\n    }\n\n    login() {\n        this.router.navigate(['/']);\n    }\n}\n"]}]}