{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","mtime":1573033582433},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b;\nconst core_1 = require(\"@angular/core\");\nconst ngx_webstorage_1 = require(\"ngx-webstorage\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet AuthInterceptor = class AuthInterceptor {\n    constructor(localStorage, sessionStorage) {\n        this.localStorage = localStorage;\n        this.sessionStorage = sessionStorage;\n    }\n    intercept(request, next) {\n        if (!request || !request.url || (/^http/.test(request.url) && !(app_constants_1.SERVER_API_URL && request.url.startsWith(app_constants_1.SERVER_API_URL)))) {\n            return next.handle(request);\n        }\n        const token = this.localStorage.retrieve(app_constants_1.AUTHENTICATION_TOKEN) || this.sessionStorage.retrieve(app_constants_1.AUTHENTICATION_TOKEN);\n        if (!!token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: app_constants_1.BEARER + token\n                }\n            });\n        }\n        return next.handle(request);\n    }\n};\nAuthInterceptor = tslib_1.__decorate([\n    core_1.Injectable(),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ngx_webstorage_1.LocalStorageService !== \"undefined\" && ngx_webstorage_1.LocalStorageService) === \"function\" ? _a : Object, typeof (_b = typeof ngx_webstorage_1.SessionStorageService !== \"undefined\" && ngx_webstorage_1.SessionStorageService) === \"function\" ? _b : Object])\n], AuthInterceptor);\nexports.AuthInterceptor = AuthInterceptor;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/blocks/interceptor/auth.interceptor.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAE3C,mDAA4E;AAG5E,qDAAiF;AAGjF,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC1B,YAAoB,YAAiC,EAAU,cAAqC;QAAhF,iBAAY,GAAZ,YAAY,CAAqB;QAAU,mBAAc,GAAd,cAAc,CAAuB;IAAG,CAAC;IAExG,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,8BAAc,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,8BAAc,CAAC,CAAC,CAAC,EAAE;YAC1H,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7B;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,oCAAoB,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,oCAAoB,CAAC,CAAC;QACrH,IAAI,CAAC,CAAC,KAAK,EAAE;YACX,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,sBAAM,GAAG,KAAK;iBAC9B;aACF,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;CACF,CAAA;AAlBY,eAAe;IAD3B,iBAAU,EAAE;iEAEuB,oCAAmB,oBAAnB,oCAAmB,oDAA0B,sCAAqB,oBAArB,sCAAqB;GADzF,eAAe,CAkB3B;AAlBY,0CAAe","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\n\nimport { SERVER_API_URL, AUTHENTICATION_TOKEN, BEARER } from 'app/app.constants';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private localStorage: LocalStorageService, private sessionStorage: SessionStorageService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!request || !request.url || (/^http/.test(request.url) && !(SERVER_API_URL && request.url.startsWith(SERVER_API_URL)))) {\n      return next.handle(request);\n    }\n\n    const token = this.localStorage.retrieve(AUTHENTICATION_TOKEN) || this.sessionStorage.retrieve(AUTHENTICATION_TOKEN);\n    if (!!token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: BEARER + token\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n"]}]}