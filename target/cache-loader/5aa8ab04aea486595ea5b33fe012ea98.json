{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/masters/masters.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/admin/masters/masters.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c;\nconst core_1 = require(\"@angular/core\");\nconst app_constants_1 = require(\"app/app.constants\");\nconst configure_model_1 = require(\"app/shared/model/configure.model\");\nconst masters_service_1 = require(\"app/admin/masters/masters.service\");\nconst router_1 = require(\"@angular/router\");\nconst ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\nconst sweetalert2_1 = require(\"sweetalert2\");\nconst app_constants_2 = require(\"app/app.constants\");\nlet MastersComponent = class MastersComponent {\n    // mastersDrpdwn = ['Location', 'Mode', 'PayType', 'Employer', 'ClientDomain', 'EndDomain', 'Status'];\n    constructor(masterService, route, modalService) {\n        this.masterService = masterService;\n        this.route = route;\n        this.modalService = modalService;\n        this.inputData = '';\n    }\n    ngOnInit() {\n        this.selectionElement = app_constants_1.LOCATION;\n        this.selection(this.selectionElement);\n    }\n    selectedId(data) {\n        this.elementName = data.name;\n        this.elementid = data.id;\n    }\n    selection(selectionElement) {\n        this.selectionElement = selectionElement;\n        this.url = this.getUrlBasedConfigureType(this.selectionElement);\n        this.masterService.query(this.url).subscribe(res => {\n            this.masters = res.body;\n        });\n    }\n    updateData(data) {\n        this.configureData = new configure_model_1.Configure();\n        this.configureData.id = this.elementid;\n        this.configureData.name = data;\n        this.url = this.getUrlBasedConfigureType(this.selectionElement);\n        this.masterService.update(this.url, this.configureData).subscribe(res => {\n            if (res.status === 200) {\n                sweetalert2_1.default.fire(app_constants_2.BLANK, app_constants_2.MASTER_UPDATE_MSG, app_constants_2.SUCCESS);\n                this.selection(this.selectionElement);\n            }\n        }, err => {\n            sweetalert2_1.default.fire(app_constants_1.OOPS, app_constants_2.MASTER_EXIST_ERROR_MSG, app_constants_1.WARNING);\n        });\n    }\n    saveData() {\n        if (this.inputData === null || this.inputData === '') {\n            sweetalert2_1.default.fire(app_constants_2.BLANK, app_constants_2.MASTER_ERROR_MSG, app_constants_2.ERROR);\n            return;\n        }\n        this.configureData = new configure_model_1.Configure();\n        this.configureData.name = this.inputData;\n        this.url = this.getUrlBasedConfigureType(this.selectionElement);\n        console.log(app_constants_1.DATA_IS + this.url);\n        this.masterService.save(this.url, this.configureData).subscribe(res => {\n            console.log(app_constants_1.ASDFAF, res);\n            if (res.status === 201) {\n                sweetalert2_1.default.fire(app_constants_2.BLANK, app_constants_2.MASTER_SUCCESS_MSG, app_constants_2.SUCCESS);\n                this.selection(this.selectionElement);\n            }\n            else {\n                sweetalert2_1.default.fire(app_constants_1.OOPS, app_constants_2.MASTER_ERROR_MSG, app_constants_2.ERROR);\n            }\n        }, error1 => {\n            sweetalert2_1.default.fire(app_constants_1.OOPS, app_constants_2.MASTER_EXIST_ERROR_MSG, app_constants_1.WARNING);\n            this.inputData = '';\n        });\n        this.inputData = '';\n    }\n    getUrlBasedConfigureType(selection) {\n        if (selection === app_constants_1.LOCATION) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_LOCATIONS;\n        }\n        else if (selection === app_constants_1.EMP_TYPE) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_EMPTYPES;\n        }\n        else if (selection === app_constants_1.CLIENT_DOMAIN) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.CLIENT_DOMAINS;\n        }\n        else if (selection === app_constants_1.END_CLIENT) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_ENDCLIENTS;\n        }\n        else if (selection === app_constants_1.WORK_AUTHORIZATION) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.WORK_AUTHORIZATIONS;\n        }\n        else if (selection === app_constants_1.PRIME_VENDOR) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_PRIMEVENDORS;\n        }\n        else if (selection === app_constants_1.JOB_TITLE) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_JOBTITLES;\n        }\n        else if (selection === app_constants_1.MODE) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_MODES;\n        }\n        else if (selection === app_constants_1.PAY_TYPE) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_PAYTYPES;\n        }\n        else if (selection === app_constants_1.EMPLOYER) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_EMPLOYERS;\n        }\n        else if (selection === app_constants_1.STATUS) {\n            return app_constants_1.SERVER_API_URL + app_constants_1.API_STATUS;\n        }\n    }\n};\nMastersComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-masters',\n        templateUrl: './masters.component.html',\n        styleUrls: ['masters.component.scss']\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof masters_service_1.MastersService !== \"undefined\" && masters_service_1.MastersService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _b : Object, typeof (_c = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _c : Object])\n], MastersComponent);\nexports.MastersComponent = MastersComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/admin/masters/masters.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/masters/masters.component.ts"],"names":[],"mappings":";;;;AAAA,wCAAkD;AAClD,qDAAwX;AACxX,sEAAyE;AACzE,uEAAmE;AACnE,4CAAyC;AACzC,6DAAsD;AACtD,6CAA+B;AAC/B,qDAM2B;AAM3B,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAS1B,sGAAsG;IAEtG,YAAoB,aAA6B,EAAU,KAAa,EAAU,YAAsB;QAApF,kBAAa,GAAb,aAAa,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAQ;QAAU,iBAAY,GAAZ,YAAY,CAAU;QATxG,cAAS,GAAG,EAAE,CAAC;IAUf,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,gBAAgB,GAAG,wBAAQ,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC1C,CAAC;IAED,UAAU,CAAC,IAAI;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;IAC9B,CAAC;IAED,SAAS,CAAC,gBAAwB;QAC9B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,IAAI;QACV,IAAI,CAAC,aAAa,GAAG,IAAI,2BAAS,EAAE,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACpE,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACpB,qBAAI,CAAC,IAAI,CAAC,qBAAK,EAAE,iCAAiB,EAAE,uBAAO,CAAC,CAAC;gBAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACzC;QACL,CAAC,EAAE,GAAG,CAAC,EAAE;YACL,qBAAI,CAAC,IAAI,CAAC,oBAAI,EAAE,sCAAsB,EAAE,uBAAO,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACP,CAAC;IAEF,QAAQ;QACJ,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,EAAE,EAAE;YAClD,qBAAI,CAAC,IAAI,CAAC,qBAAK,EAAE,gCAAgB,EAAE,qBAAK,CAAC,CAAC;YAC1C,OAAO;SACV;QAED,IAAI,CAAC,aAAa,GAAG,IAAI,2BAAS,EAAE,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChE,OAAO,CAAC,GAAG,CAAC,uBAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClE,OAAO,CAAC,GAAG,CAAC,sBAAM,EAAE,GAAG,CAAC,CAAC;YACxB,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACpB,qBAAI,CAAC,IAAI,CAAC,qBAAK,EAAE,kCAAkB,EAAE,uBAAO,CAAC,CAAC;gBAC9C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;aACzC;iBAAM;gBACH,qBAAI,CAAC,IAAI,CAAC,oBAAI,EAAE,gCAAgB,EAAE,qBAAK,CAAC,CAAC;aAC5C;QACN,CAAC,EAAE,MAAM,CAAC,EAAE;YACP,qBAAI,CAAC,IAAI,CAAC,oBAAI,EAAE,sCAAsB,EAAE,uBAAO,CAAC,CAAC;YAClD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACxB,CAAC;IAEO,wBAAwB,CAAC,SAAiB;QAC9C,IAAI,SAAS,KAAK,wBAAQ,EAAE;YACxB,OAAO,8BAAc,GAAG,6BAAa,CAAC;SACzC;aAAM,IAAI,SAAS,KAAK,wBAAQ,EAAE;YAC/B,OAAO,8BAAc,GAAG,4BAAY,CAAC;SACxC;aAAM,IAAI,SAAS,KAAK,6BAAa,EAAE;YACpC,OAAO,8BAAc,GAAG,8BAAc,CAAC;SAC1C;aAAM,IAAI,SAAS,KAAK,0BAAU,EAAE;YACjC,OAAO,8BAAc,GAAG,8BAAc,CAAC;SAC1C;aAAM,IAAI,SAAS,KAAK,kCAAkB,EAAE;YACzC,OAAO,8BAAc,GAAI,mCAAmB,CAAC;SAChD;aAAM,IAAI,SAAS,KAAK,4BAAY,EAAE;YACnC,OAAO,8BAAc,GAAG,gCAAgB,CAAC;SAC5C;aAAM,IAAI,SAAS,KAAK,yBAAS,EAAE;YAChC,OAAO,8BAAc,GAAG,6BAAa,CAAC;SACzC;aAAM,IAAI,SAAS,KAAM,oBAAI,EAAE;YAC5B,OAAO,8BAAc,GAAG,yBAAS,CAAC;SACrC;aAAM,IAAI,SAAS,KAAK,wBAAQ,EAAE;YAC/B,OAAO,8BAAc,GAAG,4BAAY,CAAC;SACxC;aAAM,IAAI,SAAS,KAAK,wBAAQ,EAAE;YAC/B,OAAO,8BAAc,GAAG,6BAAa,CAAC;SACzC;aAAM,IAAI,SAAS,KAAK,sBAAM,EAAE;YAC7B,OAAO,8BAAc,GAAG,0BAAU,CAAC;SACtC;IACL,CAAC;CACH,CAAA;AAjGY,gBAAgB;IAL5B,gBAAS,CAAC;QACR,QAAQ,EAAE,aAAa;QACvB,WAAW,EAAE,0BAA0B;QACvC,SAAS,EAAE,CAAC,wBAAwB,CAAC;KACvC,CAAC;iEAYoC,gCAAc,oBAAd,gCAAc,oDAAiB,eAAM,oBAAN,eAAM,oDAAwB,uBAAQ,oBAAR,uBAAQ;GAX9F,gBAAgB,CAiG5B;AAjGY,4CAAgB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LOCATION, SERVER_API_URL, WARNING, OOPS, DATA_IS, ASDFAF, API_LOCATIONS, EMP_TYPE, API_EMPTYPES, CLIENT_DOMAIN, CLIENT_DOMAINS, END_CLIENT, API_ENDCLIENTS, WORK_AUTHORIZATION, WORK_AUTHORIZATIONS, PRIME_VENDOR, API_PRIMEVENDORS, JOB_TITLE, MODE, API_JOBTITLES, API_MODES, PAY_TYPE, API_PAYTYPES, EMPLOYER, API_EMPLOYERS, STATUS, API_STATUS } from 'app/app.constants';\nimport { Configure, IConfigure } from 'app/shared/model/configure.model';\nimport { MastersService } from 'app/admin/masters/masters.service';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport Swal from 'sweetalert2';\nimport {\n    MASTER_SUCCESS_MSG,\n    MASTER_UPDATE_MSG,\n    MASTER_ERROR_MSG,\n    MASTER_EXIST_ERROR_MSG,\n    SLACE, BLANK, INFO, ERROR, SUCCESS\n} from 'app/app.constants';\n@Component({\n   selector: 'jhi-masters',\n   templateUrl: './masters.component.html',\n   styleUrls: ['masters.component.scss']\n})\nexport class MastersComponent implements OnInit {\n   selectionElement: string;\n   inputData = '';\n   configureData: IConfigure;\n   masters: any;\n   private url: string;\n   helper: any;\n   elementName: '';\n   elementid: any;\n   // mastersDrpdwn = ['Location', 'Mode', 'PayType', 'Employer', 'ClientDomain', 'EndDomain', 'Status'];\n\n   constructor(private masterService: MastersService, private route: Router, private modalService: NgbModal) {\n   }\n\n   ngOnInit() {\n       this.selectionElement = LOCATION;\n       this.selection(this.selectionElement);\n   }\n\n   selectedId(data) {\n        this.elementName = data.name;\n        this.elementid = data.id;\n   }\n\n   selection(selectionElement: string) {\n       this.selectionElement = selectionElement;\n       this.url = this.getUrlBasedConfigureType(this.selectionElement);\n       this.masterService.query(this.url).subscribe(res => {\n           this.masters = res.body;\n       });\n   }\n\n   updateData(data) {\n        this.configureData = new Configure();\n        this.configureData.id = this.elementid;\n        this.configureData.name = data;\n        this.url = this.getUrlBasedConfigureType(this.selectionElement);\n        this.masterService.update(this.url, this.configureData).subscribe(res => {\n            if (res.status === 200) {\n                Swal.fire(BLANK, MASTER_UPDATE_MSG, SUCCESS);\n                this.selection(this.selectionElement);\n            }\n        }, err => {\n            Swal.fire(OOPS, MASTER_EXIST_ERROR_MSG, WARNING);\n        });\n    }\n\n   saveData() {\n       if (this.inputData === null || this.inputData === '') {\n           Swal.fire(BLANK, MASTER_ERROR_MSG, ERROR);\n           return;\n       }\n\n       this.configureData = new Configure();\n       this.configureData.name = this.inputData;\n       this.url = this.getUrlBasedConfigureType(this.selectionElement);\n       console.log(DATA_IS + this.url);\n       this.masterService.save(this.url, this.configureData).subscribe(res => {\n           console.log(ASDFAF, res);\n            if (res.status === 201) {\n                Swal.fire(BLANK, MASTER_SUCCESS_MSG, SUCCESS);\n                this.selection(this.selectionElement);\n            } else {\n                Swal.fire(OOPS, MASTER_ERROR_MSG, ERROR);\n            }\n       }, error1 => {\n            Swal.fire(OOPS, MASTER_EXIST_ERROR_MSG, WARNING);\n           this.inputData = '';\n       });\n       this.inputData = '';\n   }\n\n   private getUrlBasedConfigureType(selection: string): string {\n       if (selection === LOCATION) {\n           return SERVER_API_URL + API_LOCATIONS;\n       } else if (selection === EMP_TYPE) {\n           return SERVER_API_URL + API_EMPTYPES;\n       } else if (selection === CLIENT_DOMAIN) {\n           return SERVER_API_URL + CLIENT_DOMAINS;\n       } else if (selection === END_CLIENT) {\n           return SERVER_API_URL + API_ENDCLIENTS;\n       } else if (selection === WORK_AUTHORIZATION) {\n           return SERVER_API_URL +  WORK_AUTHORIZATIONS;\n       } else if (selection === PRIME_VENDOR) {\n           return SERVER_API_URL + API_PRIMEVENDORS;\n       } else if (selection === JOB_TITLE) {\n           return SERVER_API_URL + API_JOBTITLES;\n       } else if (selection ===  MODE) {\n           return SERVER_API_URL + API_MODES;\n       } else if (selection === PAY_TYPE) {\n           return SERVER_API_URL + API_PAYTYPES;\n       } else if (selection === EMPLOYER) {\n           return SERVER_API_URL + API_EMPLOYERS;\n       } else if (selection === STATUS) {\n           return SERVER_API_URL + API_STATUS;\n       }\n   }\n}\n"]}]}