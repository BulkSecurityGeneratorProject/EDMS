{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/audits/audits.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/admin/audits/audits.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c, _d, _e, _f;\nconst core_1 = require(\"@angular/core\");\nconst common_1 = require(\"@angular/common\");\nconst router_1 = require(\"@angular/router\");\nconst ng_jhipster_1 = require(\"ng-jhipster\");\nconst shared_1 = require(\"app/shared\");\nconst audits_service_1 = require(\"./audits.service\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet AuditsComponent = class AuditsComponent {\n    constructor(auditsService, alertService, parseLinks, activatedRoute, datePipe, router) {\n        this.auditsService = auditsService;\n        this.alertService = alertService;\n        this.parseLinks = parseLinks;\n        this.activatedRoute = activatedRoute;\n        this.datePipe = datePipe;\n        this.router = router;\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\n        this.routeData = this.activatedRoute.data.subscribe(data => {\n            this.page = data[app_constants_1.PAGING_PARAMS].page;\n            this.previousPage = data[app_constants_1.PAGING_PARAMS].page;\n            this.reverse = data[app_constants_1.PAGING_PARAMS].ascending;\n            this.predicate = data[app_constants_1.PAGING_PARAMS].predicate;\n        });\n    }\n    ngOnInit() {\n        this.today();\n        this.previousMonth();\n        this.loadAll();\n    }\n    ngOnDestroy() {\n        this.routeData.unsubscribe();\n    }\n    previousMonth() {\n        const dateFormat = app_constants_1.YYYY_MM_DD;\n        let fromDate = new Date();\n        if (fromDate.getMonth() === 0) {\n            fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n        }\n        else {\n            fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n        }\n        this.fromDate = this.datePipe.transform(fromDate, dateFormat);\n    }\n    today() {\n        const dateFormat = app_constants_1.YYYY_MM_DD;\n        // Today + 1 day - needed if the current day must be included\n        const today = new Date();\n        today.setDate(today.getDate() + 1);\n        const date = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        this.toDate = this.datePipe.transform(date, dateFormat);\n    }\n    loadAll() {\n        this.auditsService.find().subscribe(res => this.onSuccess(res), (res) => this.onError(res));\n        // .query({\n        //   page: this.page - 1,\n        //   size: this.itemsPerPage,\n        //   sort: this.sort(),\n        //   fromDate: this.fromDate,\n        //   toDate: this.toDate\n        // })\n        // .subscribe((res: HttpResponse<Audit[]>) => this.onSuccess(res.body, res.headers), (res: HttpResponse<any>) => this.onError(res.body));\n    }\n    sort() {\n        const result = [this.predicate + ',' + (this.reverse ? app_constants_1.ASC : app_constants_1.DESC)];\n        if (this.predicate !== app_constants_1.ID) {\n            result.push(app_constants_1.ID);\n        }\n        return result;\n    }\n    loadPage(page) {\n        if (page !== this.previousPage) {\n            this.previousPage = page;\n            this.transition();\n        }\n    }\n    transition() {\n        this.router.navigate([app_constants_1.ADMIN_AUDITS], {\n            queryParams: {\n                page: this.page,\n                sort: this.predicate + ',' + (this.reverse ? app_constants_1.ASC : app_constants_1.DESC)\n            }\n        });\n        this.loadAll();\n    }\n    onSuccess(data) {\n        // this.links = this.parseLinks.parse(headers.get('link'));\n        //  this.totalItems = headers.get('X-Total-Count');\n        console.log(app_constants_1.DATA, data);\n        this.userTransactions = data;\n    }\n    onError(error) {\n        this.alertService.error(error.error, error.message, null);\n    }\n};\nAuditsComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-audit',\n        templateUrl: './audits.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof audits_service_1.AuditsService !== \"undefined\" && audits_service_1.AuditsService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _c : Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _d : Object, typeof (_e = typeof common_1.DatePipe !== \"undefined\" && common_1.DatePipe) === \"function\" ? _e : Object, typeof (_f = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _f : Object])\n], AuditsComponent);\nexports.AuditsComponent = AuditsComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/admin/audits/audits.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/admin/audits/audits.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { JhiParseLinks, JhiAlertService } from 'ng-jhipster';\n\nimport { ITEMS_PER_PAGE } from 'app/shared';\nimport { Audit } from './audit.model';\nimport { AuditsService } from './audits.service';\nimport { YYYY_MM_DD, ID, ASC, DESC, DATA, PAGING_PARAMS, ADMIN_AUDITS } from 'app/app.constants';\n\n@Component({\n  selector: 'jhi-audit',\n  templateUrl: './audits.component.html'\n})\nexport class AuditsComponent implements OnInit, OnDestroy {\n  audits: Audit[];\n  fromDate: string;\n  itemsPerPage: any;\n  links: any;\n  page: number;\n  routeData: any;\n  predicate: any;\n  previousPage: any;\n  reverse: boolean;\n  toDate: string;\n  totalItems: number;\n  userTransactions: any;\n\n  constructor(\n    private auditsService: AuditsService,\n    private alertService: JhiAlertService,\n    private parseLinks: JhiParseLinks,\n    private activatedRoute: ActivatedRoute,\n    private datePipe: DatePipe,\n    private router: Router\n  ) {\n    this.itemsPerPage = ITEMS_PER_PAGE;\n    this.routeData = this.activatedRoute.data.subscribe(data => {\n      this.page = data[PAGING_PARAMS].page;\n      this.previousPage = data[PAGING_PARAMS].page;\n      this.reverse = data[PAGING_PARAMS].ascending;\n      this.predicate = data[PAGING_PARAMS].predicate;\n    });\n  }\n\n  ngOnInit() {\n    this.today();\n    this.previousMonth();\n    this.loadAll();\n  }\n\n  ngOnDestroy() {\n    this.routeData.unsubscribe();\n  }\n\n  previousMonth() {\n    const dateFormat = YYYY_MM_DD;\n    let fromDate: Date = new Date();\n\n    if (fromDate.getMonth() === 0) {\n      fromDate = new Date(fromDate.getFullYear() - 1, 11, fromDate.getDate());\n    } else {\n      fromDate = new Date(fromDate.getFullYear(), fromDate.getMonth() - 1, fromDate.getDate());\n    }\n\n    this.fromDate = this.datePipe.transform(fromDate, dateFormat);\n  }\n\n  today() {\n    const dateFormat = YYYY_MM_DD;\n    // Today + 1 day - needed if the current day must be included\n    const today: Date = new Date();\n    today.setDate(today.getDate() + 1);\n    const date = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n    this.toDate = this.datePipe.transform(date, dateFormat);\n  }\n\n  loadAll() {\n    this.auditsService.find().subscribe(res => this.onSuccess(res), (res: HttpResponse<any>) => this.onError(res));\n    // .query({\n    //   page: this.page - 1,\n    //   size: this.itemsPerPage,\n    //   sort: this.sort(),\n    //   fromDate: this.fromDate,\n    //   toDate: this.toDate\n    // })\n    // .subscribe((res: HttpResponse<Audit[]>) => this.onSuccess(res.body, res.headers), (res: HttpResponse<any>) => this.onError(res.body));\n  }\n\n  sort() {\n    const result = [this.predicate + ',' + (this.reverse ? ASC : DESC)];\n    if (this.predicate !== ID) {\n      result.push(ID);\n    }\n    return result;\n  }\n\n  loadPage(page: number) {\n    if (page !== this.previousPage) {\n      this.previousPage = page;\n      this.transition();\n    }\n  }\n\n  transition() {\n    this.router.navigate([ADMIN_AUDITS], {\n      queryParams: {\n        page: this.page,\n        sort: this.predicate + ',' + (this.reverse ? ASC : DESC)\n      }\n    });\n    this.loadAll();\n  }\n\n  private onSuccess(data) {\n    // this.links = this.parseLinks.parse(headers.get('link'));\n    //  this.totalItems = headers.get('X-Total-Count');\n    console.log(DATA, data);\n    this.userTransactions = data;\n  }\n\n  private onError(error) {\n    this.alertService.error(error.error, error.message, null);\n  }\n}\n"]}]}