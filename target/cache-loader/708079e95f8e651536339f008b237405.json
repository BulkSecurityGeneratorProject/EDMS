{"remainingRequest":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js??ref--9-2!/home/srs/projects/edms/node_modules/ts-loader/index.js??ref--9-3!/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts","dependencies":[{"path":"/home/srs/projects/edms/src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts","mtime":1573033582429},{"path":"/home/srs/projects/edms/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/home/srs/projects/edms/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/srs/projects/edms/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/home/srs/projects/edms/node_modules/tslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nvar _a, _b, _c, _d;\nconst core_1 = require(\"@angular/core\");\nconst forms_1 = require(\"@angular/forms\");\nconst shared_1 = require(\"app/shared\");\nconst password_reset_init_service_1 = require(\"./password-reset-init.service\");\nconst app_constants_1 = require(\"app/app.constants\");\nlet PasswordResetInitComponent = class PasswordResetInitComponent {\n    constructor(passwordResetInitService, elementRef, renderer, fb) {\n        this.passwordResetInitService = passwordResetInitService;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.fb = fb;\n        this.resetRequestForm = this.fb.group({\n            email: ['', [forms_1.Validators.required, forms_1.Validators.minLength(5), forms_1.Validators.maxLength(254), forms_1.Validators.email]]\n        });\n    }\n    ngAfterViewInit() {\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector(app_constants_1._EMAIL), app_constants_1.FOCUS, []);\n    }\n    requestReset() {\n        this.error = null;\n        this.errorEmailNotExists = null;\n        this.passwordResetInitService.save(this.resetRequestForm.get([app_constants_1.EMAIL]).value).subscribe(() => {\n            this.success = app_constants_1.OK;\n        }, response => {\n            this.success = null;\n            if (response.status === 400 && response.error.type === shared_1.EMAIL_NOT_FOUND_TYPE) {\n                this.errorEmailNotExists = app_constants_1.ERROR_;\n            }\n            else {\n                this.error = app_constants_1.ERROR_;\n            }\n        });\n    }\n};\nPasswordResetInitComponent = tslib_1.__decorate([\n    core_1.Component({\n        selector: 'jhi-password-reset-init',\n        templateUrl: './password-reset-init.component.html'\n    }),\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof password_reset_init_service_1.PasswordResetInitService !== \"undefined\" && password_reset_init_service_1.PasswordResetInitService) === \"function\" ? _a : Object, typeof (_b = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _b : Object, typeof (_c = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _c : Object, typeof (_d = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _d : Object])\n], PasswordResetInitComponent);\nexports.PasswordResetInitComponent = PasswordResetInitComponent;\n",{"version":3,"file":"/home/srs/projects/edms/src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts","sourceRoot":"","sources":["/home/srs/projects/edms/node_modules/angular-router-loader/src/index.js!/home/srs/projects/edms/node_modules/tslint-loader/index.js!/home/srs/projects/edms/src/main/webapp/app/account/password-reset/init/password-reset-init.component.ts"],"names":[],"mappings":";;;;AAAA,wCAA+E;AAC/E,0CAAoE;AAEpE,uCAAkD;AAClD,+EAAyE;AACzE,qDAAqE;AAMrE,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAQrC,YACU,wBAAkD,EAClD,UAAsB,EACtB,QAAkB,EAClB,EAAe;QAHf,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,OAAE,GAAF,EAAE,CAAa;QARzB,qBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,kBAAU,CAAC,KAAK,CAAC,CAAC;SACzG,CAAC,CAAC;IAOA,CAAC;IAEJ,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,sBAAM,CAAC,EAAE,qBAAK,EAAE,EAAE,CAAC,CAAC;IACpG,CAAC;IAED,YAAY;QACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,qBAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CACpF,GAAG,EAAE;YACH,IAAI,CAAC,OAAO,GAAG,kBAAE,CAAC;QACpB,CAAC,EACD,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,6BAAoB,EAAE;gBAC3E,IAAI,CAAC,mBAAmB,GAAG,sBAAM,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,sBAAM,CAAC;aACrB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AArCY,0BAA0B;IAJtC,gBAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,WAAW,EAAE,sCAAsC;KACpD,CAAC;iEAUoC,sDAAwB,oBAAxB,sDAAwB,oDACtC,iBAAU,oBAAV,iBAAU,oDACZ,eAAQ,oBAAR,eAAQ,oDACd,mBAAW,oBAAX,mBAAW;GAZd,0BAA0B,CAqCtC;AArCY,gEAA0B","sourcesContent":["import { Component, AfterViewInit, Renderer, ElementRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { EMAIL_NOT_FOUND_TYPE } from 'app/shared';\nimport { PasswordResetInitService } from './password-reset-init.service';\nimport { EMAIL, FOCUS, _EMAIL, OK, ERROR_ } from 'app/app.constants';\n\n@Component({\n  selector: 'jhi-password-reset-init',\n  templateUrl: './password-reset-init.component.html'\n})\nexport class PasswordResetInitComponent implements AfterViewInit {\n  error: string;\n  errorEmailNotExists: string;\n  success: string;\n  resetRequestForm = this.fb.group({\n    email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]]\n  });\n\n  constructor(\n    private passwordResetInitService: PasswordResetInitService,\n    private elementRef: ElementRef,\n    private renderer: Renderer,\n    private fb: FormBuilder\n  ) {}\n\n  ngAfterViewInit() {\n    this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector(_EMAIL), FOCUS, []);\n  }\n\n  requestReset() {\n    this.error = null;\n    this.errorEmailNotExists = null;\n\n    this.passwordResetInitService.save(this.resetRequestForm.get([EMAIL]).value).subscribe(\n      () => {\n        this.success = OK;\n      },\n      response => {\n        this.success = null;\n        if (response.status === 400 && response.error.type === EMAIL_NOT_FOUND_TYPE) {\n          this.errorEmailNotExists = ERROR_;\n        } else {\n          this.error = ERROR_;\n        }\n      }\n    );\n  }\n}\n"]}]}